<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Picgo+Typora+SMMS图床配置</title>
    <url>/2024/10/20/Picgo+Typora+SM.MS%E5%9B%BE%E5%BA%8A%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="Picgo-Typora-SMMS图床配置"><a href="#Picgo-Typora-SMMS图床配置" class="headerlink" title="Picgo+Typora+SMMS图床配置"></a>Picgo+Typora+SMMS图床配置</h1><h1 id="🔔碎碎念："><a href="#🔔碎碎念：" class="headerlink" title="🔔碎碎念："></a>🔔碎碎念：</h1><p>​		由于每次写学习笔记都会有相应的图片。之前有使用过<em><strong>阿里云的OSS</strong></em>。使用起来也是相当不错的，但是OSS是收费的。其<em><strong>付费模式</strong></em>可以包月，也可以按访问流量来付费，虽然便宜，但是对于还在学习的小伙伴来说也是没必要的。使用<em><strong>免费的图床</strong></em>也可以实现相同的功能。比如sm.ms图床，有免费版本和付费版本，免费容量是50G。访问速度来说也还算是OK。所以本次配置的图床选择sm.ms。</p>
<p>​		写这篇配置教程的<em><strong>目的</strong></em>是，将自己以前的学习做一个<em><strong>记录</strong></em>，就是想帮助一下<em><strong>更多的</strong></em>，想要实现相同功能的朋友。其次也是帮助一下特别好的朋友配置图床。</p>
<h2 id="一、Picgo"><a href="#一、Picgo" class="headerlink" title="一、Picgo"></a>一、Picgo</h2><h3 id="Picgo简介："><a href="#Picgo简介：" class="headerlink" title="Picgo简介："></a>Picgo简介：</h3><ol>
<li><p>应用概述：一个用于快速上传图片并获取图片 URL 链接的工具。</p>
</li>
<li><p>picgo本身支持：<code>七牛图床</code> v1.0、<code>腾讯云 COS v4\v5 版本</code> v1.1 &amp; v1.5.0、<code>又拍云</code> v1.2.0、<code>GitHub</code> v1.5.0、<code>SM.MS V2</code> v2.3.0-beta.0、<code>阿里云 OSS</code> v1.6.0、<code>Imgur</code> v1.6.0等。还可以通过插件扩展其他图床。</p>
</li>
<li><p>应用界面：</p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/10/20/RAOhWi32Gw496os.png"
                      alt="image-20241020140658220"
                ><figcaption>image-20241020140658220</figcaption></figure></p>
</li>
</ol>
<h3 id="Picgo安装配置："><a href="#Picgo安装配置：" class="headerlink" title="Picgo安装配置："></a>Picgo安装配置：</h3><ol>
<li><p>下载地址：<a class="link"   href="https://github.com/Molunerfinn/PicGo%EF%BC%8C%E6%88%96%E8%80%85%E9%80%89%E6%8B%A9%E5%85%B6%E4%BB%96%E9%95%9C%E5%83%8F%E6%BA%90%E4%B8%8B%E8%BD%BD%E4%B9%9F%E5%8F%AF%E3%80%82%E4%B8%8B%E8%BD%BD%E5%B7%B2%E7%BB%8F%E6%89%93%E5%8C%85%E5%A5%BD%E7%9A%84exe%E7%A8%8B%E5%BA%8F%EF%BC%8C%E5%AE%89%E8%A3%85%E7%9B%B4%E6%8E%A5%E7%82%B9%E5%87%BBexe%E5%8F%AF%E6%89%A7%E8%A1%8C%E7%A8%8B%E5%BA%8F%EF%BC%8C%E7%82%B9%E5%87%BB%E4%B8%8B%E4%B8%80%E6%AD%A5%E5%8D%B3%E5%8F%AF%E3%80%82" >https://github.com/Molunerfinn/PicGo，或者选择其他镜像源下载也可。下载已经打包好的exe程序，安装直接点击exe可执行程序，点击下一步即可。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p>下载完成后。配置sm.ms图床。配置sm.ms图床前需要注册图床的账户。<a class="link"   href="https://smms.app/" >图床地址 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a><a class="link"   href="https://smms.app/%E3%80%82" >https://smms.app/。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<blockquote>
<p>这里使用picgo-plugin-smms-user插件，插件下载地址<a class="link"   href="https://github.com/xlzy520/picgo-plugin-smms-user%E3%80%82%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8git%E6%88%96%E8%80%85%E7%9B%B4%E6%8E%A5%E7%82%B9%E5%87%BB%E4%B8%8B%E8%BD%BD%E5%8E%8B%E7%BC%A9%E5%8C%85%E3%80%82" >https://github.com/xlzy520/picgo-plugin-smms-user。可以使用git或者直接点击下载压缩包。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<ul>
<li><p>在线安装直接在插件设置界面搜索：<strong>smms-user</strong>安装，安装完成后重启应用</p>
</li>
<li><p>离线安装，下载插件包，将插件包移动到picgo的安装目录下执行以下命令。这里使用本地插件导入的方式使用。</p>
</li>
</ul>
 <div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="code"><pre><code class="hljs node.js">npm install ./picgo-plugin-smms-user<br></code></pre></td></tr></table></figure></div>
</blockquote>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/10/20/qUmz5ZehK4OaEvS.png"
                      alt="image-20241020142806786"
                ><figcaption>image-20241020142806786</figcaption></figure></p>
</li>
<li><p>安装使用导入本地插件的方式如上图。导入后就会在《插件设置》菜单显示。</p>
</li>
<li><p>点击插件的设置按钮，选择最后一项《配置uploader-smms-user》配置smms-user的auth值，auth通过<a class="link"   href="https://smms.app/" >smms官网 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的API-Token获取即可。</p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/10/20/gvm97be8cflxLRW.png"
                      alt="image-20241020145626017"
                ><figcaption>image-20241020145626017</figcaption></figure></p>
</li>
<li><p>配置完成后在《上传区》图片上传勾选SM.MS-登录用户就完成了picgo和sm.ms的配置。和上述picgo简介应用图片位置一致。将图片拖入相应位置就可以直接将图片上传到sm.ms图床上了。登录<a class="link"   href="https://smms.app/%E5%8D%B3%E5%8F%AF%E6%9F%A5%E7%9C%8B%E3%80%82" >https://smms.app/即可查看。 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
</li>
<li><p>对于picgo的其他配置可以在设置模块查看，建议开启上传前重命名功能。此项功能方便以后管理sm.ms图床的图片。</p>
</li>
</ol>
<h2 id="二、Typora"><a href="#二、Typora" class="headerlink" title="二、Typora"></a>二、Typora</h2><h3 id="功能需求："><a href="#功能需求：" class="headerlink" title="功能需求："></a>功能需求：</h3><blockquote>
<p>将typora笔记中的图片，利用picgo工具直接上传到sm.ms图床上并返回图片地址供typora笔记所使用。</p>
</blockquote>
<h3 id="Typora配置："><a href="#Typora配置：" class="headerlink" title="Typora配置："></a>Typora配置：</h3><p>Typora本软件不再做介绍，直接给出配置步骤。</p>
<ol>
<li>点击菜单栏的《文件》选项。</li>
<li>选择《偏好设置》。</li>
<li>选择《图像设置》，插入图片时-&gt;<em><strong>上传图片。</strong></em></li>
<li>勾选☑️对本地位置的图片应用上述规则。</li>
<li>上传服务选择<em><strong>Picgo(app)</strong></em></li>
<li>picgo的路径选择picgo的安装路径中的picgo.exe可执行程序即可如下图。</li>
</ol>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/10/20/A13RwKLq8Jfxmk9.png"
                      alt="image-20241020151951062"
                ><figcaption>image-20241020151951062</figcaption></figure></p>
<p>完成以上的配置，你的typora就实现了插入图片自动上传到smms的图床的功能啦。🎉🎉🎉</p>
<h2 id="三、扩展"><a href="#三、扩展" class="headerlink" title="三、扩展"></a>三、扩展</h2><p>当然你也可以使用其他的图床或者是云存储的服务。大部分的云存储服务都是收费的，比例<a href="https://www.aliyun.com/product/oss"><em><strong>阿里云OSS</strong></em></a>，<a href="https://cloud.tencent.com/product/cos"><em><strong>腾讯云COS</strong></em></a>，<a href="https://www.qiniu.com/products/kodo"><em><strong>七牛云</strong></em></a>，<a href="https://www.upyun.com/"><em><strong>又拍云</strong></em></a>等，可以根据自己的经济情况选择一款云存储服务，当然用免费的不是更好吗。毕竟白嫖的就是香，但是便宜的免费的可能会面临就是<em><strong>服务提供商跑路</strong></em>了，图片就可能找不到。选择大厂的虽说付费，也不算太贵不是。至少不太可能出现跑路的情况。</p>
<p>这里以<a href="https://www.upyun.com/"><em><strong>又拍云</strong></em></a>为例。</p>
<p>这里没有广告！没有广告！没有广告！重要的事情说三遍。</p>
<h3 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h3><ol>
<li><p>登录<a href="https://www.upyun.com/"><em><strong>又拍云官方网站</strong></em></a>，注册账号。</p>
</li>
<li><p>进入又拍云控制台，在云服务列表，创建服务。服务名称就是bucket。在后续picgo配置中会使用到，应用场景-填写网页图片，存储类型-选择标准类型，这里授权账号可以先不授权。也可以直接授权已有的操作员，或者新建授权操作员。然后点击下方的创建。服务创建完成后，点击进入配置。</p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/10/20/kdBGrFfJsajo3qX.png"
                      alt="image-20241020162956667"
                ><figcaption>image-20241020162956667</figcaption></figure></p>
</li>
<li><p>在功能配置的域名管理模块，域名加速模块绑定域名。这里注意，在绑定域名时，域名需要<em><strong>备案</strong></em>，不然<em><strong>审核不通过</strong></em>，然后去域名提供商网站增加域名解析记录。这里以<em><strong>阿里云为例</strong></em>。</p>
<ul>
<li><p>在域名解析控制台，点击已有的域名进入解析设置。</p>
</li>
<li><p>点击添加记录，记录类型选择<a href="https://www.aliyun.com/"><em><strong>CNAME</strong></em></a>。CNAME的意思是从一个域名指向另一个域名，主机记录值可以随意填写，如下图表示的内容。一般来说设置二级域名更加合适。</p>
</li>
<li><p>解析请求来源设置默认即可。</p>
<p>记录值填写在又拍云云存储服务的CNAME就可以了。该值的查找方式，又拍云控制台-&gt;云存储服务-&gt;服务管理 云存储（在该页面中点击服务名称）-&gt;域名管理页面的CNAME。</p>
</li>
</ul>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/10/20/gQHZYl8sThUXB1v.png"
                      alt="image-20241020165402733"
                ><figcaption>image-20241020165402733</figcaption></figure></p>
</li>
<li><p>存储管理模块的<em><strong>操作员授权</strong></em>。点击授权按钮，有操作员就直接勾选☑️，没有操作员的点击新建授权操作员。输入操作员名称，密码项只能点击系统生成。生成完成后复制该密码，保存起来后续在配置picgo中使用。然后权限勾选☑️可读取，可写入，可删除。根据实际用途勾选权限。点击创建即可，如下图。</p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/10/20/UVnLzu2QtksfFid.png"
                      alt="image-20241020164210706"
                ><figcaption>image-20241020164210706</figcaption></figure></p>
</li>
<li><p>完成上述步骤，你的又拍云云存储服务就创建好了。🎉🎉🎉</p>
</li>
</ol>
<h3 id="Picgo配置"><a href="#Picgo配置" class="headerlink" title="Picgo配置"></a>Picgo配置</h3><ol>
<li>在picgo的界面找到图床设置。在图床设置中选择<em><strong>又拍云</strong></em>配置。</li>
<li>在又拍云的设置界面填写相关的配置即可。</li>
<li>设定Bucket,这里的<em><strong>bucket</strong></em>就是前面创建的<em><strong>云存储服务的名称。</strong></em></li>
<li>设定操作员就是你给云服务授权的操作人名称</li>
<li>设定<em><strong>操作员密码</strong></em>，这个密码就是在创建操作员的时候生成的密码。</li>
<li>设定加速域名，该项值是在又拍云控制台-&gt;云存储服务-&gt;服务管理 云存储（在该页面中点击服务名称）-&gt;域名管理页面的加速域名</li>
<li>设定网址后缀（选填），可以不填不影响使用。</li>
<li>设定<em><strong>存储路径</strong></em>，就是你在bucket(云存储服务)中的<em><strong>文件夹路径</strong></em>。也可以不填，这样图片会上传到你的bucket的根目录下。</li>
<li>完成以上设置以后，点击保存，在上传区域选择又拍云。就可以完成图片通过picgo上传又拍云云存储了。</li>
<li>这时在typora写文章图片同样也会上传又拍云。</li>
</ol>
<p>其他云存储服务和图床的配置基本上大致相同。这里就不展开描述了。后续可能会添加其他的免费的图床配置的内容。</p>
<p>完结</p>
]]></content>
      <categories>
        <category>工具</category>
        <category>图床</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>图床配置</tag>
        <tag>Picgo</tag>
        <tag>云存储服务</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle笔记</title>
    <url>/2024/10/19/Oracle%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="PL-SQL-developer安装"><a href="#PL-SQL-developer安装" class="headerlink" title="PL&#x2F;SQL developer安装"></a>PL&#x2F;SQL developer安装</h2><p>1、安装PL&#x2F;SQL developer程序，安装目录不要出现中文。</p>
<p>2、配置客户端路径：点击PL&#x2F;SQL developer界面的Configure-&gt;Preferences-&gt;oracle配置的connect属性配置。，和</p>
<p>指定Oracle Home 路径：D:\BaiduNetdiskDownload\client\instantclient_12_1</p>
<p>指定OCI library路径：D:\BaiduNetdiskDownload\client\instantclient_12_1\oci.dll</p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/10/19/cpLkrysu8OPBWn3.png"
                      alt="image-20230714112548602"
                ><figcaption>image-20230714112548602</figcaption></figure></p>
<p>3、在 ORACLE 的以下安装目录中找到 tnsnames.ora 文件，拷贝到本地电脑的 D盘根目录。打开 tnsnames.ora 文件编辑配置oracle所在的服务器IP地址，设置环境变量 TNS_ADMIN 为 D 盘根目录( tnsnames.ora 所在目录 )</p>
<p><figure class="image-caption"><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="https://s2.loli.net/2024/10/19/3moA91eZRBKpDIG.png"
                      alt="image-20230714113841909"
                ><figcaption>image-20230714113841909</figcaption></figure></p>
<p>4、中文编码设置查看服务器端编码 </p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SQL</span>:<span class="hljs-keyword">select</span> userenv(<span class="hljs-string">&#x27;language&#x27;</span>) <span class="hljs-keyword">from</span> dual;<br></code></pre></td></tr></table></figure></div>

<p>我实际查到的结果为:AMERICAN_AMERICA.ZHS16GBK<br>5、配置环境变量，计算机-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;新建，设置变量名:NLS_LANG,变量值:第 1 步查到的值，<br>AMERICAN_AMERICA.ZHS16GBK</p>
<h2 id="1、数据类型"><a href="#1、数据类型" class="headerlink" title="1、数据类型"></a>1、数据类型</h2><h4 id="number-数值类型"><a href="#number-数值类型" class="headerlink" title="number 数值类型"></a>number 数值类型</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">number（<span class="hljs-number">5</span>） 最大值<span class="hljs-number">99999</span> <br>number(<span class="hljs-number">5</span>,<span class="hljs-number">2</span>) 最大值<span class="hljs-number">999.99</span><br></code></pre></td></tr></table></figure></div>

<h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><div class="highlight-container" data-rel="Text"><figure class="iseeu highlight text"><table><tr><td class="code"><pre><code class="hljs text">char 固定长度的字符类型，最多存储2000个字节<br>varchar2 可变长度的字符类型，最多存储4000个字节<br>long  大文本类型。最大可以存储2个G<br></code></pre></td></tr></table></figure></div>

<h4 id="日期类型"><a href="#日期类型" class="headerlink" title="日期类型"></a>日期类型</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">sysdate 日期时间型，精确到秒<br><span class="hljs-type">timestamp</span> 精确到秒的小数点后<span class="hljs-number">9</span>位<br></code></pre></td></tr></table></figure></div>

<h4 id="二进制类型"><a href="#二进制类型" class="headerlink" title="二进制类型"></a>二进制类型</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-type">clob</span> 存储字符,最大可以存<span class="hljs-number">4</span>个G<br><span class="hljs-type">blob</span> 存储图像、声音、视频等二进制数据,最多可以存<span class="hljs-number">4</span>个G<br></code></pre></td></tr></table></figure></div>

<h2 id="2、DDL操作"><a href="#2、DDL操作" class="headerlink" title="2、DDL操作"></a>2、DDL操作</h2><h4 id="用SQLPLUS连接Oracle的连接字符串"><a href="#用SQLPLUS连接Oracle的连接字符串" class="headerlink" title="用SQLPLUS连接Oracle的连接字符串"></a>用SQLPLUS连接Oracle的连接字符串</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">sqlplus <span class="hljs-keyword">system</span><span class="hljs-operator">/</span>local123<span class="hljs-variable">@192</span><span class="hljs-number">.168</span><span class="hljs-number">.157</span><span class="hljs-number">.129</span>:<span class="hljs-number">1521</span><span class="hljs-operator">/</span>orcl<br>sqlplus    账户名<span class="hljs-operator">/</span>密码@所在主机:端口号<br>sqlplus <span class="hljs-keyword">system</span><span class="hljs-operator">/</span>local123 <span class="hljs-keyword">as</span> sysdba<br></code></pre></td></tr></table></figure></div>

<h4 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span>space xxxx<br>datafile <span class="hljs-string">&#x27;c:\xxxx.dbf&#x27;</span><br>size <span class="hljs-number">100</span>m autoextend <span class="hljs-keyword">on</span> next <span class="hljs-number">10</span>m<br>xxx表示表空间名<br>datafile 表示数据储存的物理文件名<br>size 用于设置表的初始大小<br>autoextend <span class="hljs-keyword">on</span> 用于设置自动增长，如果存储量超过初始大小，则开始自动扩容<br>next 用于设置扩容的空间大小<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span>space test;<br>datafile <span class="hljs-string">&#x27;c:\test.dbf&#x27;</span><br>size <span class="hljs-number">100</span>m autoextend <span class="hljs-keyword">on</span> next <span class="hljs-number">10</span>m<br></code></pre></td></tr></table></figure></div>

<h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">user</span> 用户名<br>identified <span class="hljs-keyword">by</span> 密码<br><span class="hljs-keyword">default</span> tablespace 表空间名<br></code></pre></td></tr></table></figure></div>

<h4 id="用户赋予权限"><a href="#用户赋予权限" class="headerlink" title="用户赋予权限"></a>用户赋予权限</h4><div class="highlight-container" data-rel="Pgsql"><figure class="iseeu highlight pgsql"><table><tr><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">grant</span> dba <span class="hljs-keyword">to</span> 用户名  给xxx用户授予DBA权限<br></code></pre></td></tr></table></figure></div>

<h4 id="表的创建"><a href="#表的创建" class="headerlink" title="表的创建"></a>表的创建</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> 表名（<br>字段名  字段类型[长度] [约束],<br>....<br>）<br>例如<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> users(<br>userid number <span class="hljs-keyword">primary</span> key,<br>name varchar2(<span class="hljs-number">50</span>)<br>);<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_owners(<br>id number <span class="hljs-keyword">primary</span> key,<br>name varchar2(<span class="hljs-number">30</span>),<br>addressid number,<br>housenumber varchar2(<span class="hljs-number">30</span>),<br>watermeter varchar2(<span class="hljs-number">30</span>),<br>adddate <span class="hljs-type">date</span>,<br>ownertypeid number<br>)<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_ownertype(id number  <span class="hljs-keyword">primary</span> key,name varchar2(<span class="hljs-number">30</span>));<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_pricetable(id number <span class="hljs-keyword">primary</span> key,price number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>),ownertypeid number,minnum number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>),maxnum number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>));<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_area(id number <span class="hljs-keyword">primary</span> key,name varchar2(<span class="hljs-number">30</span>));<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_operator(id number prmary key,name varchar2(<span class="hljs-number">30</span>));<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_address(id number,name varchar2(<span class="hljs-number">30</span>),areaid number,operatorid number);<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class="hljs-keyword">year</span> <span class="hljs-type">char</span>(<span class="hljs-number">4</span>),<span class="hljs-keyword">month</span> <span class="hljs-type">char</span>(<span class="hljs-number">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class="hljs-type">date</span>,money number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>),isfee <span class="hljs-type">char</span>(<span class="hljs-number">1</span>),feedate <span class="hljs-type">date</span>,feeuserid number);<br></code></pre></td></tr></table></figure></div>

<h4 id="表的修改"><a href="#表的修改" class="headerlink" title="表的修改"></a>表的修改</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">desc</span> tablename 查看表的详情<br>#<span class="hljs-number">1</span>、增加字段语法<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> tablename <span class="hljs-keyword">add</span> ( 字段名  字段类型 [<span class="hljs-keyword">default</span> 默认值 ],字段名  字段类型 [<span class="hljs-keyword">default</span> 默认值 ] );<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> t_owners <span class="hljs-keyword">add</span> ( level number <span class="hljs-keyword">default</span> <span class="hljs-number">1</span>,email varchar2(<span class="hljs-number">255</span>) );<br>#<span class="hljs-number">2</span>、修改字段语法<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> tablename modify(字段名 字段类型[<span class="hljs-keyword">default</span> 默认值],字段名 字段类型[<span class="hljs-keyword">default</span> 默认值]);<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> t_owners modify(email varchar2(<span class="hljs-number">50</span>));<br>#<span class="hljs-number">3</span>、修改字段名<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> tablename rename <span class="hljs-keyword">column</span> 原字段名 <span class="hljs-keyword">to</span> 新的字段名<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> t_owners rename <span class="hljs-keyword">column</span> email <span class="hljs-keyword">to</span> mail;<br>#<span class="hljs-number">4</span>、删除字段名<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> tablename <span class="hljs-keyword">drop</span> <span class="hljs-keyword">column</span> 字段名；<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> t_owners <span class="hljs-keyword">drop</span> tel<br>#<span class="hljs-number">5</span>、删除多个字段名<br><span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> tablename <span class="hljs-keyword">drop</span> (字段<span class="hljs-number">1</span>,字段<span class="hljs-number">2</span>);<br><br></code></pre></td></tr></table></figure></div>

<h4 id="清空表"><a href="#清空表" class="headerlink" title="清空表"></a>清空表</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">truncate</span> <span class="hljs-keyword">table</span> tablename; 删除表再重构表<br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> tablename <span class="hljs-keyword">where</span> <span class="hljs-number">1</span><span class="hljs-operator">=</span><span class="hljs-number">1</span>; 表结构还在 主键自增的序列依然存在<br></code></pre></td></tr></table></figure></div>

<h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">table</span> tablename;<br></code></pre></td></tr></table></figure></div>

<h2 id="3、DML操作"><a href="#3、DML操作" class="headerlink" title="3、DML操作"></a>3、DML操作</h2><h4 id="insert操作"><a href="#insert操作" class="headerlink" title="insert操作"></a>insert操作</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_owners(<br>id number <span class="hljs-keyword">primary</span> key,<br>name varchar2(<span class="hljs-number">30</span>),<br>addressid number,<br>housenumber varchar2(<span class="hljs-number">30</span>),<br>watermeter varchar2(<span class="hljs-number">30</span>),<br>adddate <span class="hljs-type">date</span>,<br>ownertypeid number<br>)<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> T_OWNERS <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;张三丰&#x27;</span>,<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;2-2&#x27;</span>,<span class="hljs-string">&#x27;5678&#x27;</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> T_OWNERS <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;苏赫&#x27;</span>,<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;15-2&#x27;</span>,<span class="hljs-string">&#x27;8975&#x27;</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> T_OWNERS <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">3</span>,<span class="hljs-string">&#x27;涂山红红&#x27;</span>,<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;6-2&#x27;</span>,<span class="hljs-string">&#x27;3456&#x27;</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">commit</span>;<br>#<span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_ownertype(id number  <span class="hljs-keyword">primary</span> key,name varchar2(<span class="hljs-number">30</span>));<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_ownertype(id,name)<span class="hljs-keyword">values</span>(<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;master&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_ownertype(id,name)<span class="hljs-keyword">values</span>(<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;levelmaster&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_ownertype(id,name)<span class="hljs-keyword">values</span>(<span class="hljs-number">1003</span>,<span class="hljs-string">&#x27;supermaster&#x27;</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_ownertype(id,name)<span class="hljs-keyword">values</span>(<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;居民&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_ownertype(id,name)<span class="hljs-keyword">values</span>(<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;物业&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_ownertype(id,name)<span class="hljs-keyword">values</span>(<span class="hljs-number">1003</span>,<span class="hljs-string">&#x27;来兵&#x27;</span>);<br><span class="hljs-keyword">commit</span>;<br>#<span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_pricetable(id number <span class="hljs-keyword">primary</span> key,price number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>),ownertypeid number,minnum #number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>),maxnum number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>));<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_pricetable <span class="hljs-keyword">values</span>(<span class="hljs-number">3</span>,<span class="hljs-number">2.45</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">0</span>,<span class="hljs-number">5</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_pricetable <span class="hljs-keyword">values</span>(<span class="hljs-number">4</span>,<span class="hljs-number">3.45</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">5</span>,<span class="hljs-number">10</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_pricetable <span class="hljs-keyword">values</span>(<span class="hljs-number">5</span>,<span class="hljs-number">4.45</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">10</span>,<span class="hljs-keyword">null</span>);<br><span class="hljs-keyword">commit</span><br>#<span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_area(id number <span class="hljs-keyword">primary</span> key,name varchar2(<span class="hljs-number">30</span>));<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_area <span class="hljs-keyword">values</span>(<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;East China&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_area <span class="hljs-keyword">values</span>(<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;North China&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_area <span class="hljs-keyword">values</span>(<span class="hljs-number">1003</span>,<span class="hljs-string">&#x27;NorthEast&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_area <span class="hljs-keyword">values</span>(<span class="hljs-number">1004</span>,<span class="hljs-string">&#x27;SouthWest&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_area <span class="hljs-keyword">values</span>(<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;双流区&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_area <span class="hljs-keyword">values</span>(<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;温江区&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_area <span class="hljs-keyword">values</span>(<span class="hljs-number">1003</span>,<span class="hljs-string">&#x27;青羊区&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_area <span class="hljs-keyword">values</span>(<span class="hljs-number">1004</span>,<span class="hljs-string">&#x27;青白江区&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_area <span class="hljs-keyword">values</span>(<span class="hljs-number">1005</span>,<span class="hljs-string">&#x27;武侯区&#x27;</span>);<br><span class="hljs-keyword">commit</span>;<br>#<span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_operator(id number <span class="hljs-keyword">primary</span> key,name varchar2(<span class="hljs-number">30</span>));<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_operator <span class="hljs-keyword">values</span>(<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;mary&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_operator <span class="hljs-keyword">values</span>(<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;sueh&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_operator <span class="hljs-keyword">values</span>(<span class="hljs-number">1003</span>,<span class="hljs-string">&#x27;lili&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_operator <span class="hljs-keyword">values</span>(<span class="hljs-number">1004</span>,<span class="hljs-string">&#x27;harry&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_operator <span class="hljs-keyword">values</span>(<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;小明&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_operator <span class="hljs-keyword">values</span>(<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;小何&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_operator <span class="hljs-keyword">values</span>(<span class="hljs-number">1003</span>,<span class="hljs-string">&#x27;小苏&#x27;</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_operator <span class="hljs-keyword">values</span>(<span class="hljs-number">1004</span>,<span class="hljs-string">&#x27;小红&#x27;</span>);<br><span class="hljs-keyword">commit</span>;<br>#<span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_address(id number <span class="hljs-keyword">primary</span> key,name varchar2(<span class="hljs-number">30</span>),areaid number,operatorid number);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_address <span class="hljs-keyword">values</span>(<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;quhouqu&#x27;</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_address <span class="hljs-keyword">values</span>(<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;qingyangqu&#x27;</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">1002</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_address <span class="hljs-keyword">values</span>(<span class="hljs-number">1003</span>,<span class="hljs-string">&#x27;shuangliuqu&#x27;</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">1003</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_address <span class="hljs-keyword">values</span>(<span class="hljs-number">1004</span>,<span class="hljs-string">&#x27;wenjiangqu&#x27;</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">1004</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_address <span class="hljs-keyword">values</span>(<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;草金路&#x27;</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_address <span class="hljs-keyword">values</span>(<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;尚楠湾&#x27;</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">1002</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_address <span class="hljs-keyword">values</span>(<span class="hljs-number">1003</span>,<span class="hljs-string">&#x27;江安河大桥&#x27;</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">1003</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_address <span class="hljs-keyword">values</span>(<span class="hljs-number">1004</span>,<span class="hljs-string">&#x27;崇教路&#x27;</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">1004</span>);<br><span class="hljs-keyword">commit</span>;<br><br>#<span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class="hljs-keyword">year</span> <span class="hljs-type">char</span>(<span class="hljs-number">4</span>),<span class="hljs-keyword">month</span> #<span class="hljs-type">char</span>(<span class="hljs-number">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class="hljs-type">date</span>,money number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>),isfee #<span class="hljs-type">char</span>(<span class="hljs-number">1</span>),feedate <span class="hljs-type">date</span>,feeuserid number);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_account <span class="hljs-keyword">values</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">2023</span>,<span class="hljs-number">06</span>,<span class="hljs-number">43543</span>,<span class="hljs-number">46456</span>,<span class="hljs-number">3000</span>,<span class="hljs-number">1001</span>,sysdate,<span class="hljs-number">3232</span>,<span class="hljs-number">0</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_account <span class="hljs-keyword">values</span>(<span class="hljs-number">2</span>,<span class="hljs-number">1002</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1002</span>,<span class="hljs-number">2023</span>,<span class="hljs-number">06</span>,<span class="hljs-number">46456</span>,<span class="hljs-number">50020</span>,<span class="hljs-number">3564</span>,<span class="hljs-number">1002</span>,sysdate,<span class="hljs-number">3755</span>,<span class="hljs-number">0</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_account <span class="hljs-keyword">values</span>(<span class="hljs-number">3</span>,<span class="hljs-number">1003</span>,<span class="hljs-number">1002</span>,<span class="hljs-number">1003</span>,<span class="hljs-number">2023</span>,<span class="hljs-number">06</span>,<span class="hljs-number">82122</span>,<span class="hljs-number">92131</span>,<span class="hljs-number">10009</span>,<span class="hljs-number">1003</span>,sysdate,<span class="hljs-number">12000</span>,<span class="hljs-number">0</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_account <span class="hljs-keyword">values</span>(<span class="hljs-number">4</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">2023</span>,<span class="hljs-number">07</span>,<span class="hljs-number">46456</span>,<span class="hljs-number">50000</span>,<span class="hljs-number">3544</span>,<span class="hljs-number">1004</span>,sysdate,<span class="hljs-number">3232</span>,<span class="hljs-number">0</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_account <span class="hljs-keyword">values</span>(<span class="hljs-number">5</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1004</span>,<span class="hljs-number">2023</span>,<span class="hljs-number">06</span>,<span class="hljs-number">60000</span>,<span class="hljs-number">80000</span>,<span class="hljs-number">20000</span>,<span class="hljs-number">1001</span>,sysdate,<span class="hljs-number">3232</span>,<span class="hljs-number">0</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_account <span class="hljs-keyword">values</span>(<span class="hljs-number">6</span>,<span class="hljs-number">1003</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1003</span>,<span class="hljs-number">2023</span>,<span class="hljs-number">07</span>,<span class="hljs-number">92131</span>,<span class="hljs-number">100000</span>,<span class="hljs-number">7869</span>,<span class="hljs-number">1001</span>,sysdate,<span class="hljs-number">3232</span>,<span class="hljs-number">0</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_account <span class="hljs-keyword">values</span>(<span class="hljs-number">7</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">2023</span>,<span class="hljs-number">08</span>,<span class="hljs-number">50000</span>,<span class="hljs-number">70000</span>,<span class="hljs-number">20000</span>,<span class="hljs-number">1003</span>,sysdate,<span class="hljs-number">3232</span>,<span class="hljs-number">0</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_account <span class="hljs-keyword">values</span>(<span class="hljs-number">8</span>,<span class="hljs-number">1002</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1002</span>,<span class="hljs-number">2023</span>,<span class="hljs-number">07</span>,<span class="hljs-number">50020</span>,<span class="hljs-number">70020</span>,<span class="hljs-number">20000</span>,<span class="hljs-number">1003</span>,sysdate,<span class="hljs-number">20000</span>,<span class="hljs-number">0</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">commit</span>;<br>#关联查询<br><span class="hljs-keyword">select</span><br>  tad.id <span class="hljs-keyword">as</span> addressid,<br>  tad.name <span class="hljs-keyword">as</span> addressname,<br>  ta.name <span class="hljs-keyword">as</span> areaname,<br>  top.name <span class="hljs-keyword">as</span> operatorname<br><span class="hljs-keyword">from</span> t_address tad,t_area ta,t_operator top<br><span class="hljs-keyword">where</span> tad.areaid<span class="hljs-operator">=</span>ta.id <span class="hljs-keyword">and</span> tad.operatorid<span class="hljs-operator">=</span>top.id;<br><br><br><span class="hljs-keyword">select</span> <br>	t1.addressid,<br>   	t1.addressname,<br>    t2.name <span class="hljs-keyword">as</span> operatoname,<br>   	t1.areaname<br><span class="hljs-keyword">from</span> (<br>   <span class="hljs-keyword">select</span> <br>   		tad.id <span class="hljs-keyword">as</span> addressid,<br>   		tad.name <span class="hljs-keyword">as</span> addressname,<br>    	tad.operatorid <span class="hljs-keyword">as</span> operatorid,<br>   		ta.name <span class="hljs-keyword">as</span> areaname<br>   <span class="hljs-keyword">from</span> t_address tad <span class="hljs-keyword">left</span>  <span class="hljs-keyword">join</span> t_area ta <span class="hljs-keyword">on</span> tad.areaid<span class="hljs-operator">=</span>ta.id<br>) t1 <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> t_operator t2 <span class="hljs-keyword">on</span> t1.operatorid<span class="hljs-operator">=</span> t2.id;<br></code></pre></td></tr></table></figure></div>

<h4 id="update数据修改"><a href="#update数据修改" class="headerlink" title="update数据修改"></a>update数据修改</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> 表名 <span class="hljs-keyword">set</span> 字段<span class="hljs-operator">=</span>新值，字段<span class="hljs-operator">=</span>新值 <span class="hljs-keyword">where</span> 条件;<br><span class="hljs-keyword">update</span> t_ownertype <span class="hljs-keyword">set</span> id<span class="hljs-operator">=</span><span class="hljs-number">1004</span>,name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;level1master&#x27;</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1001</span>;<br><span class="hljs-keyword">commit</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="delete删除数据"><a href="#delete删除数据" class="headerlink" title="delete删除数据"></a>delete删除数据</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#<span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> tablename <span class="hljs-keyword">where</span> 条件<br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> t_ownertype <span class="hljs-keyword">where</span> id <span class="hljs-operator">=</span><span class="hljs-number">1004</span>;<br><span class="hljs-keyword">commit</span>;<br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> t_ownertype <span class="hljs-keyword">where</span> id <span class="hljs-operator">&gt;</span><span class="hljs-number">1001</span>;<br><span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> t_ownertype <span class="hljs-keyword">where</span> id <span class="hljs-keyword">in</span> (<span class="hljs-number">1001</span>,<span class="hljs-number">1002</span>,<span class="hljs-number">1003</span>);<br><span class="hljs-keyword">commit</span>;<br></code></pre></td></tr></table></figure></div>

<blockquote>
<p>注意增删改查操作完成后记得commit提交事务</p>
</blockquote>
<h4 id="导入导出"><a href="#导入导出" class="headerlink" title="导入导出"></a>导入导出</h4><p>数据的导出</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">expdp(impdp) 用户名<span class="hljs-operator">/</span>密码@连接地址:端口<span class="hljs-operator">/</span>服务名 [schemas<span class="hljs-operator">|</span>owner]<span class="hljs-operator">=</span>用户名 [dumpfile<span class="hljs-operator">|</span>file]<span class="hljs-operator">=</span>file1.dmp logfile<span class="hljs-operator">=</span>file1.log directory<span class="hljs-operator">=</span>testdata1 remap_schema<span class="hljs-operator">=</span>test:test;<br>exp:导出命令，导出时必写。<br>imp:导入命令，导入时必写,每次操作，二者只能选择一个执行。<br>username:导出数据的用户名，必写;<br>password:导出数据的密码，必写;<br>@:地址符号，必写;<br>SERVICENAME:Oracle的服务名，必写;<br><span class="hljs-number">1521</span>:端口号，<span class="hljs-number">1521</span>是默认的可以不写,非默认要写;<br>schemas：导出操作的用户名;<br>dumpfile：导出的文件;<br>logfile:导出的日志文件,可以不写；<br>directory: 如果手工创建了转储文件和日志文件，通过本命令指定导出位置<br>remap_schema<span class="hljs-operator">=</span>源数据库用户名:目标数据库用户名,二者不同时必写，相同可以省略;<br><br>#例如<br>exp <span class="hljs-keyword">system</span><span class="hljs-operator">/</span>local123 <span class="hljs-keyword">full</span><span class="hljs-operator">=</span>y 整个数据库全部导出<br>exp <span class="hljs-keyword">system</span><span class="hljs-operator">/</span>local123 <span class="hljs-keyword">full</span><span class="hljs-operator">=</span>y [dumpfile<span class="hljs-operator">|</span>file]<span class="hljs-operator">=</span>a.dmp<br>exp lili<span class="hljs-operator">/</span>lili123 file<span class="hljs-operator">=</span>lili.dmp owner<span class="hljs-operator">=</span>lili;<br>按用户导入<br>imp lili<span class="hljs-operator">/</span>lili123 file<span class="hljs-operator">=</span>lili.dmp fromuserlili;<br></code></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">通过<span class="hljs-variable">@F</span>:\website\oraok\ot\<span class="hljs-number">11</span>g\ot_drop.sql 导入F盘下的\website\oraok\ot\<span class="hljs-number">11</span>g\目录下的ot_drop.sql文件<br></code></pre></td></tr></table></figure></div>

<h2 id="4、DML练习"><a href="#4、DML练习" class="headerlink" title="4、DML练习"></a>4、DML练习</h2><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> tac.areaid,<span class="hljs-built_in">sum</span>(tac.money),ta.name <span class="hljs-keyword">from</span> t_account tac,t_area ta <span class="hljs-keyword">where</span> tac.areaid<span class="hljs-operator">=</span>ta.id <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> tac.areaid,ta.name;<br></code></pre></td></tr></table></figure></div>

<h4 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners;<br>#精确查询<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners <span class="hljs-keyword">where</span> watermeter<span class="hljs-operator">=</span><span class="hljs-number">5678</span>;<br>#模糊查询<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%张%&#x27;</span>;<br>#<span class="hljs-keyword">and</span>的运算符 <span class="hljs-keyword">or</span>运算符<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;张%&#x27;</span> <span class="hljs-keyword">or</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%山%&#x27;</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;_山__&#x27;</span> <span class="hljs-keyword">or</span> watermeter<span class="hljs-operator">&gt;</span><span class="hljs-number">5678</span>;<br>#<span class="hljs-keyword">and</span>运算符 <span class="hljs-keyword">or</span>运算符混合使用<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners <span class="hljs-keyword">where</span> (name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%苏%&#x27;</span> <span class="hljs-keyword">or</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%山%&#x27;</span> ) <span class="hljs-keyword">and</span> addressid <span class="hljs-operator">=</span><span class="hljs-number">1002</span>;<br>#范围查询<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> num0<span class="hljs-operator">&gt;=</span><span class="hljs-number">50000</span> <span class="hljs-keyword">and</span> num0<span class="hljs-operator">&lt;=</span><span class="hljs-number">70000</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> num0 <span class="hljs-keyword">between</span> <span class="hljs-number">50000</span> <span class="hljs-keyword">and</span> <span class="hljs-number">70000</span>;<br>#空值查询<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span>  <span class="hljs-keyword">from</span> t_account isfee <span class="hljs-keyword">is</span> <span class="hljs-keyword">null</span>;<br>#查询非空值<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_account isfee <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">null</span>;<br>#去重查询<br><span class="hljs-keyword">select</span> <span class="hljs-keyword">distinct</span> addressid <span class="hljs-keyword">from</span> t_owners ; <br>#排序 默认升序<span class="hljs-keyword">asc</span> <span class="hljs-keyword">desc</span>降序<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> usenum <span class="hljs-keyword">desc</span>;<br>#基于伪列的查询rowid rowid是保存数据在磁盘上的物理地址<br><span class="hljs-keyword">select</span> rowid,t.<span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners t;<br>#可以通过rowid来指定查询的某条数据<br><span class="hljs-keyword">select</span> rowid,t.<span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners t <span class="hljs-keyword">where</span> rowid<span class="hljs-operator">=</span><span class="hljs-string">&#x27;AAASNcAABAAAVJpAAD&#x27;</span>;<br>#基于伪列的查询rownum rownum是基于查询出的结果集的序号<br><span class="hljs-keyword">select</span> rownum,t.<span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners t;<br>#聚合统计sum<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">sum</span>(usenum) <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;2023&#x27;</span>;<br>#平均值<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(usenum) <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;2023&#x27;</span>;<br>#最小值<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">min</span>(usenum) <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;2023&#x27;</span>;<br>#最大值<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">max</span>(usenum) <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;2023&#x27;</span>;<br>#统计个数<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">count</span>(id) <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-string">&#x27;2023&#x27;</span>;<br>#分组查询<br><span class="hljs-keyword">select</span> areaid,<span class="hljs-built_in">sum</span>(usenum) <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> areaid;<br>#分组后在指定条件的查询<br><span class="hljs-keyword">select</span> areaid,<span class="hljs-built_in">sum</span>(usenum) <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> areaid <span class="hljs-keyword">having</span> <span class="hljs-built_in">sum</span>(usenum)<span class="hljs-operator">&gt;</span><span class="hljs-number">20000</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#多表内连接<br><span class="hljs-keyword">select</span> twn.<span class="hljs-operator">*</span>,ta.name addressname <span class="hljs-keyword">from</span> t_owners twn,t_address ta <span class="hljs-keyword">where</span> twn.addressid<span class="hljs-operator">=</span>ta.id;<br><br>#查询显示业主编号，业主名称、地址和业主类型<br><span class="hljs-keyword">select</span> twn.id,twn.name,ta.name addressname,tt.name ownertype <span class="hljs-keyword">from</span> t_owners twn,t_ownertype tt,t_address ta <span class="hljs-keyword">where</span> twn.ownertypeid<span class="hljs-operator">=</span>tt.id <span class="hljs-keyword">and</span> twn.addressid<span class="hljs-operator">=</span>ta.id; <br><br>#查询显示业主编号、业主名称、地址、所属区域、业主分类<br><span class="hljs-keyword">select</span> twn.id,twn.name,ta.name addressname,t1.name areaname,tt.name ownername <span class="hljs-keyword">from</span> t_owners twn, t_area t1,t_address ta,t_ownertype tt <span class="hljs-keyword">where</span> twn.addressid<span class="hljs-operator">=</span>ta.id <span class="hljs-keyword">and</span> twn.ownertypeid<span class="hljs-operator">=</span>tt.id <span class="hljs-keyword">and</span> ta.areaid<span class="hljs-operator">=</span>t1.id;<br><br>#查询显示业主编号、业主名称、地址、所属区域、收费员、业主分类<br><span class="hljs-keyword">select</span> twn.id,twn.name,ta.name addressname,t1.name areaname,top.name operatorname,tt.name ownertypename <span class="hljs-keyword">from</span> t_owners twn,t_address ta,t_area t1,t_operator top,t_ownertype tt<br><span class="hljs-keyword">where</span> twn.addressid<span class="hljs-operator">=</span>ta.id <span class="hljs-keyword">and</span> twn.ownertypeid<span class="hljs-operator">=</span>tt.id <span class="hljs-keyword">and</span> ta.areaid<span class="hljs-operator">=</span>t1.id <span class="hljs-keyword">and</span> ta.operatorid<span class="hljs-operator">=</span>top.id;<br><br>#查询业主的账务记录，显示业主编号、名称、年、月、金额。如果此业主没有账务记录也要列出姓名。<br><span class="hljs-keyword">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class="hljs-keyword">from</span> t_owners twn <span class="hljs-keyword">left</span> <span class="hljs-keyword">join</span> t_account tacc <span class="hljs-keyword">on</span> twn.id<span class="hljs-operator">=</span>tacc.ownerid; <br><br>#左外连接<br><span class="hljs-keyword">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class="hljs-keyword">from</span> t_owners twn,t_account tacc <span class="hljs-keyword">where</span> twn.id<span class="hljs-operator">=</span>tacc.ownerid(<span class="hljs-operator">+</span>);<br><br>#右外连接<br><span class="hljs-keyword">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class="hljs-keyword">from</span> t_owners twn,t_account tacc <span class="hljs-keyword">where</span> twn.id(<span class="hljs-operator">+</span>)<span class="hljs-operator">=</span>tacc.ownerid;<br><br></code></pre></td></tr></table></figure></div>

<h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><ol>
<li><p>where子句中的子查询</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#单行子查询<br>#查询 <span class="hljs-number">2023</span> 年 <span class="hljs-number">6</span> 月用水量大于平均值的台账记录<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(usenum) <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-number">6</span>;<br><span class="hljs-keyword">select</span> usenum <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> usenum<span class="hljs-operator">&gt;</span>(<span class="hljs-keyword">select</span> <span class="hljs-built_in">avg</span>(usenum) <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-number">6</span>) <span class="hljs-keyword">and</span> <span class="hljs-keyword">month</span><span class="hljs-operator">=</span><span class="hljs-number">6</span>;<br>#多行子查询<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> id <span class="hljs-keyword">in</span> (<span class="hljs-number">1001</span>,<span class="hljs-number">1002</span>);<br>#查询地址含有“草”的业主的信息<br><span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%草%&#x27;</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners <span class="hljs-keyword">where</span> addressid <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%江安河%&#x27;</span>);<br><br>#查询地址不含有“草”的业主的信息<br><span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> name <span class="hljs-keyword">not</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%草%&#x27;</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners <span class="hljs-keyword">where</span> addressid <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> name <span class="hljs-keyword">not</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%草%&#x27;</span>);<br><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_onwers <span class="hljs-keyword">where</span> addressid <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span>(<span class="hljs-keyword">select</span> id <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> name <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%草%&#x27;</span>);<br>#<br></code></pre></td></tr></table></figure></div>
</li>
<li><p>from子句中的子查询</p>
<p>from子查询为多行子查询</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#查询显示业主编号，业主名称，业主类型名称，条件为业主类型为”居民”，使用子查询实现。<br><span class="hljs-keyword">select</span> id,name,ownertypename <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> twn.<span class="hljs-operator">*</span>,tt.name ownertypename  <span class="hljs-keyword">from</span> t_owners twn,t_ownertype tt  <span class="hljs-keyword">where</span> twn.ownertypeid<span class="hljs-operator">=</span>tt.id <span class="hljs-keyword">and</span> tt.name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;居民&#x27;</span>)<br><br></code></pre></td></tr></table></figure></div>
</li>
<li><p>select 子句中的子查询</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#列出业主信息，包括 ID，名称，所属地址。<br><span class="hljs-keyword">select</span> id,name,(<span class="hljs-keyword">select</span> name <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span>addressid) addressname <span class="hljs-keyword">from</span> t_owners;<br>#列出业主信息，包括 ID，名称，所属地址，所属区域<br><span class="hljs-keyword">select</span> id,name,<br>(<span class="hljs-keyword">select</span> name <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span>addressid) addressname,<br>(<span class="hljs-keyword">select</span> (<span class="hljs-keyword">select</span> name <span class="hljs-keyword">from</span> t_area <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span>areaid) <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span>addressid) areaname<br><span class="hljs-keyword">from</span> t_owners;<br></code></pre></td></tr></table></figure></div>
</li>
<li><p>分页查询</p>
<p>使用rownum伪列来完成分页查询的功能。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#分页查询台账表 T_ACCOUNT，每页 <span class="hljs-number">10</span> 条记录<br><span class="hljs-keyword">select</span> rownum,t.<span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_account t <span class="hljs-keyword">where</span> rownum<span class="hljs-operator">&lt;=</span><span class="hljs-number">5</span>; <br>#查询<span class="hljs-number">5</span>到<span class="hljs-number">10</span>的数据<br>#子查询里rownum小于较大值,外面rownum大于较小值<br><span class="hljs-keyword">select</span> rownum,t.<span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> (<span class="hljs-keyword">select</span> rownum r,t.<span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_account t <span class="hljs-keyword">where</span> rownum<span class="hljs-operator">&lt;=</span><span class="hljs-number">20</span>) t <span class="hljs-keyword">where</span> r<span class="hljs-operator">&lt;=</span><span class="hljs-number">5</span>;<br></code></pre></td></tr></table></figure></div></li>
</ol>
<h2 id="5、函数"><a href="#5、函数" class="headerlink" title="5、函数"></a>5、函数</h2><h4 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> ascii(<span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-keyword">from</span> dual;ASCII() 返回字符的十进制数;<br><span class="hljs-keyword">select</span> chr(<span class="hljs-number">97</span>) <span class="hljs-keyword">from</span> dual; chr() 返回十进制数的对应的字符;<br><span class="hljs-keyword">select</span> concat(<span class="hljs-string">&#x27;aa&#x27;</span>,<span class="hljs-string">&#x27;bb&#x27;</span>) <span class="hljs-keyword">from</span> dual; 拼接两个字符串 <span class="hljs-operator">||</span> <br><span class="hljs-keyword">select</span> <span class="hljs-string">&#x27;aa&#x27;</span> <span class="hljs-operator">||</span> <span class="hljs-string">&#x27;bb&#x27;</span> <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> initcap(<span class="hljs-string">&#x27;string&#x27;</span>) <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> instr(<span class="hljs-string">&#x27;adbc&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-keyword">from</span> dual; 找出某个字符的位置<br><span class="hljs-keyword">select</span> instrb(<span class="hljs-string">&#x27;abc&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>) <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> length(<span class="hljs-string">&#x27;asdfgh&#x27;</span>) <span class="hljs-keyword">from</span> dual; 给出字符串的长度<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">lower</span>(<span class="hljs-string">&#x27;HELLO&#x27;</span>) <span class="hljs-keyword">from</span> dual;将字符转化成小写<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">upper</span>(<span class="hljs-string">&#x27;apple&#x27;</span>) <span class="hljs-keyword">from</span> dual;将字符串转化成小写<br>#去除指定的字符串<br><span class="hljs-keyword">select</span> ltrim(<span class="hljs-string">&#x27;##apple&#x27;</span>,<span class="hljs-string">&#x27;#&#x27;</span>) <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> rtrim(<span class="hljs-string">&#x27;apple@@&#x27;</span>,<span class="hljs-string">&#x27;@&#x27;</span>) <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">trim</span>(<span class="hljs-string">&#x27;p&#x27;</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;apple&#x27;</span>) <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> lpad(<span class="hljs-string">&#x27;apple&#x27;</span>,<span class="hljs-number">10</span>,<span class="hljs-string">&#x27;*&#x27;</span>) <span class="hljs-keyword">from</span> dual;在字符串c1的左边用字符串c2填充，直到长度为<span class="hljs-number">10</span>时为止<br><span class="hljs-keyword">select</span> rpad(<span class="hljs-string">&#x27;apple&#x27;</span>,<span class="hljs-number">10</span>,<span class="hljs-string">&#x27;#&#x27;</span>) <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> replace(<span class="hljs-string">&#x27;apple&#x27;</span>,<span class="hljs-string">&#x27;p&#x27;</span>,<span class="hljs-string">&#x27;bb&#x27;</span>) <span class="hljs-keyword">from</span> dual;替换指定的字符串。<br><span class="hljs-keyword">select</span> substr(<span class="hljs-string">&#x27;apple&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-number">2</span>) <span class="hljs-keyword">from</span> dual;从第一个位置开始截取，截取两位<br><br></code></pre></td></tr></table></figure></div>

<h4 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">sysdate 返回系统当前时间<br><span class="hljs-keyword">select</span> sysdate <span class="hljs-keyword">from</span> dual;<br>add_months 给系统返回的时间加一天<br><span class="hljs-keyword">select</span> add_months(sysdate,<span class="hljs-number">1</span>) <span class="hljs-keyword">from</span> dual;<br>last_day 返回月份的最后一天<br><span class="hljs-keyword">select</span> last_day(add_months(sysdate,<span class="hljs-number">2</span>)) <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> months_between(sysdate,to_date(<span class="hljs-string">&#x27;2023-04-30&#x27;</span>,<span class="hljs-string">&#x27;yyyy-MM-dd&#x27;</span>)) <span class="hljs-keyword">from</span> dual;<br><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">localtimestamp</span> <span class="hljs-keyword">from</span> dual;返回会话中的日期和时间 <br><span class="hljs-keyword">select</span> <span class="hljs-built_in">current_timestamp</span> <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> greatest(sysdate,add_months(sysdate,<span class="hljs-number">2</span>)) <span class="hljs-keyword">from</span> dual; 返回两个时间中最晚的。时间戳最大的。<br></code></pre></td></tr></table></figure></div>

<h4 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span>  <span class="hljs-built_in">abs</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;绝对值<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">ceil</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;大于或等于 <span class="hljs-keyword">value</span> 的最小整数<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">cos</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual; 余弦<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">cosh</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;反余弦<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">exp</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;e的<span class="hljs-keyword">value</span>次幂<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">floor</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;小于或等于 <span class="hljs-keyword">value</span> 的最大整数<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">ln</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;<span class="hljs-keyword">value</span> 的自然对数<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">log</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;<span class="hljs-keyword">value</span> 的以 <span class="hljs-number">10</span> 为底的对数<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">mod</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;求模<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">power</span>(v,p) <span class="hljs-keyword">from</span> dual;v的p次幂<br><span class="hljs-keyword">select</span> round(v,p) <span class="hljs-keyword">from</span> dual;按 <span class="hljs-keyword">precision</span> 精度<span class="hljs-number">4</span>舍<span class="hljs-number">5</span>入<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">sin</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;<span class="hljs-keyword">value</span>的正弦<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">sinh</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;<span class="hljs-keyword">value</span>的反正弦<br><span class="hljs-keyword">select</span> sign(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;<span class="hljs-keyword">value</span> 为正返回 <span class="hljs-number">1</span>;为负返回<span class="hljs-number">-1</span>;为 <span class="hljs-number">0</span> 返回 <span class="hljs-number">0.</span><br><span class="hljs-keyword">select</span> <span class="hljs-built_in">tan</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;<span class="hljs-keyword">value</span>的正切<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">tanh</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;<span class="hljs-keyword">value</span>的反正切<br><span class="hljs-keyword">select</span> vsize(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;返回<span class="hljs-keyword">value</span>在ORACLE的存储空间大小<br><span class="hljs-keyword">select</span> <span class="hljs-built_in">sqrt</span>(<span class="hljs-keyword">value</span>) <span class="hljs-keyword">from</span> dual;<span class="hljs-keyword">value</span>的平方根<br></code></pre></td></tr></table></figure></div>

<h2 id="6、表空间巡检"><a href="#6、表空间巡检" class="headerlink" title="6、表空间巡检"></a>6、表空间巡检</h2><h4 id="查询视图dba-data-files"><a href="#查询视图dba-data-files" class="headerlink" title="查询视图dba_data_files"></a>查询视图dba_data_files</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">file_name:表空间数据文件的位置<br>file_id:数据文件的ID<br>tablespace_name：表空间名称<br>bytes:表空间大小 字节显示<br>blocks:表示数据块数量<br>status:表示当前文件是否可用<br>relative_fno:相对文件号<br>autoextensible:是否自动扩展<br>maxbytes:如果扩展，最大扩展的大小<br>maxblocks：如果扩展，最大的数据块数<br>increment_by：最大增加的数据块数<br>user_bytes:文件中实际有用的字节数<br>user_blocks:文件中实际有用的数据块数<br><br><span class="hljs-keyword">select</span> file_name,tablespace_name,bytes<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span> <span class="hljs-keyword">from</span> dba_data_files;<br><span class="hljs-keyword">select</span> file_name,tablespace_name,<span class="hljs-built_in">sum</span>(bytes)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span> <span class="hljs-keyword">from</span> dba_data_files <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> file_name,tablespace_name;<br><br>#查看表空间总容量和剩余容量和使用量。<br><span class="hljs-keyword">select</span> df.tablespace_name,<span class="hljs-built_in">SUM</span>(df.bytes)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span> total,<span class="hljs-built_in">SUM</span>(fs.bytes)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span> <span class="hljs-keyword">free</span>,<span class="hljs-built_in">SUM</span>(df.bytes<span class="hljs-operator">-</span>fs.bytes)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span> used <span class="hljs-keyword">from</span> dba_data_files df,dba_free_space fs<br><span class="hljs-keyword">where</span> df.tablespace_name <span class="hljs-operator">=</span> fs.tablespace_name<br><span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> df.tablespace_name <span class="hljs-keyword">having</span> df.tablespace_name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;WATERBOSS&#x27;</span>;<br><br></code></pre></td></tr></table></figure></div>

<h4 id="查询视图dba-free-space"><a href="#查询视图dba-free-space" class="headerlink" title="查询视图dba_free_space"></a>查询视图dba_free_space</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">tablespace_name:表空间名称<br>file_id：表空间ID<br>block_id:开始块的ID<br>bytes:表示空闲的字节数<br>blocks:表示空闲的数据块数<br>relative_fno:相对文件的id<br>#查看表空间总容量和剩余容量和使用量。<br><span class="hljs-keyword">select</span> ds.tablespace_name,<span class="hljs-built_in">sum</span>(ds.bytes)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span> total,<span class="hljs-built_in">sum</span>(fs.bytes)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span> <span class="hljs-keyword">free</span>,<span class="hljs-built_in">sum</span>(ds.bytes)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">-</span><span class="hljs-built_in">sum</span>(fs.bytes)<span class="hljs-operator">/</span><span class="hljs-number">1024</span><span class="hljs-operator">/</span><span class="hljs-number">1024</span> used <span class="hljs-keyword">from</span> dba_data_files ds,dba_free_space fs <span class="hljs-keyword">where</span> ds.tablespace_name<span class="hljs-operator">=</span>fs.tablespace_name <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> ds.tablespace_name;<br></code></pre></td></tr></table></figure></div>

<h2 id="7、视图"><a href="#7、视图" class="headerlink" title="7、视图"></a>7、视图</h2><p>概念：视图是一种数据库对象，是从一个或者多个数据表或视图中导出的虚表，视图所对应的数据并不真正地存储在视图中，而是存储在所引用的数据表中，视图的结构和数据是对数据表进行查询的结果。</p>
<p>优点：</p>
<ul>
<li>简化数据操作：视图可以简化用户处理数据的方式。</li>
<li>着重于特定数据：不必要的数据或敏感数据可以不出现在视图中。</li>
<li>视图提供了一个简单而有效的安全机制，可以定制不同用户对数据的访问权限。</li>
<li>提供向后兼容性：视图使用户能够在表的架构更改时为表创建向后兼容接口。</li>
</ul>
<h4 id="创建和修改视图"><a href="#创建和修改视图" class="headerlink" title="创建和修改视图"></a>创建和修改视图</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> [<span class="hljs-keyword">or</span> replace] [force] <span class="hljs-keyword">view</span> view_name<br><span class="hljs-keyword">as</span> subquery<br>[<span class="hljs-keyword">with</span> <span class="hljs-keyword">check</span> option]<br>[<span class="hljs-keyword">with</span> read <span class="hljs-keyword">only</span>]<br><br>[<span class="hljs-keyword">or</span> replace]:若已经存在该视图，oracle自动重构该视图<br>[force]:不管基表是否存在，oracle都会自动创建该视图<br>suquery:子查询<br>[<span class="hljs-keyword">with</span> <span class="hljs-keyword">check</span> option]:插入和修改的数据行必须满足定义视图的约束<br>[<span class="hljs-keyword">with</span> read <span class="hljs-keyword">only</span>]:该视图上不能进行任何 DML 操作。<br><br>#<span class="hljs-keyword">create</span> <span class="hljs-keyword">view</span> dba_data_files_v1 <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> file_name,tablespace_name, <span class="hljs-keyword">from</span> dba_data_files;<br><span class="hljs-keyword">create</span> [<span class="hljs-keyword">or</span> replace] <span class="hljs-keyword">view</span> t_account_v1 <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> id,ownerid,ownertypeid,areaid <span class="hljs-keyword">from</span> t_account;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_account_v1;<br>#简单视图，可以进行增删改查记录<br>#<span class="hljs-keyword">update</span> view_name <span class="hljs-keyword">set</span> <span class="hljs-keyword">column</span><span class="hljs-operator">=</span>新值 <span class="hljs-keyword">where</span> 条件<br><span class="hljs-keyword">update</span> t_account_v1 <span class="hljs-keyword">set</span> areaid<span class="hljs-operator">=</span><span class="hljs-number">1002</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">5</span>;<br><span class="hljs-keyword">commit</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_account_v1;<br></code></pre></td></tr></table></figure></div>

<p>视图其实是一个虚拟的表，它的数据其实来自于表。如果更改了视图的数据，表的数据也自然会变化，更改了<br>表的数据，视图也自然会变化。</p>
<h4 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">view</span> view_name;<br></code></pre></td></tr></table></figure></div>

<h4 id="带检查约束的视图"><a href="#带检查约束的视图" class="headerlink" title="带检查约束的视图"></a>带检查约束的视图</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">view</span> t_account_v2 <br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> id,ownerid,ownertypeid,areaid <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> areaid<span class="hljs-operator">=</span><span class="hljs-number">1001</span><br><span class="hljs-keyword">with</span> <span class="hljs-keyword">check</span> option;<br><br>#<span class="hljs-keyword">update</span> t_account_v2 <span class="hljs-keyword">set</span> areaid<span class="hljs-operator">=</span><span class="hljs-number">1002</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>#会报错<span class="hljs-keyword">view</span> <span class="hljs-keyword">WITH</span> <span class="hljs-keyword">CHECK</span> OPTION <span class="hljs-keyword">where</span><span class="hljs-operator">-</span>clause violation<br></code></pre></td></tr></table></figure></div>

<h4 id="只读视图的创建与使用"><a href="#只读视图的创建与使用" class="headerlink" title="只读视图的创建与使用"></a>只读视图的创建与使用</h4><p>指定 WITH READ ONLY 选项，这样创建的视图就是一个只读视图</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">view</span> t_account_v2<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> id,ownerid,ownertypeid,areaid <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> areaid<span class="hljs-operator">=</span><span class="hljs-number">1001</span><br><span class="hljs-keyword">with</span> read <span class="hljs-keyword">only</span>;<br><span class="hljs-keyword">update</span> t_account_v2 <span class="hljs-keyword">set</span> areaid<span class="hljs-operator">=</span><span class="hljs-number">1002</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>#修改只读视图出现：cannot perform a DML operation <span class="hljs-keyword">on</span> a read<span class="hljs-operator">-</span><span class="hljs-keyword">only</span> <span class="hljs-keyword">view</span><br></code></pre></td></tr></table></figure></div>

<h4 id="创建不存在基表的视图"><a href="#创建不存在基表的视图" class="headerlink" title="创建不存在基表的视图"></a>创建不存在基表的视图</h4><p>有的时候，创建视图时的表可能并不存在，但是以后可能会存在，此时需要创建这样的视图，需要添加 FORCE 选项</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace force <span class="hljs-keyword">view</span> t_temp_vi <br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_temp;<br></code></pre></td></tr></table></figure></div>

<h4 id="查询所有的视图"><a href="#查询所有的视图" class="headerlink" title="查询所有的视图"></a>查询所有的视图</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> user_views;<br></code></pre></td></tr></table></figure></div>

<h4 id="复杂视图的创建与使用"><a href="#复杂视图的创建与使用" class="headerlink" title="复杂视图的创建与使用"></a>复杂视图的创建与使用</h4><p>复杂视图，就是视图的 SQL 语句中，有聚合函数或多表关联查询。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#<span class="hljs-number">1</span>、多表关联查询的视图<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace force <span class="hljs-keyword">view</span> twn_tt_v1<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> twn.<span class="hljs-operator">*</span>,tt.name <span class="hljs-keyword">as</span> ownertypename <span class="hljs-keyword">from</span> t_owners twn,t_ownertype tt <span class="hljs-keyword">where</span> twn.ownertypeid<span class="hljs-operator">=</span>tt.id(<span class="hljs-operator">+</span>)<br><span class="hljs-keyword">with</span> <span class="hljs-keyword">check</span> option;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> twn_tt_v1;<br><span class="hljs-keyword">update</span> twn_tt_v1 <span class="hljs-keyword">set</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;suhe&#x27;</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1002</span>;<br>#可以修改主表的数据不可以修改关联表的数据<br>#<span class="hljs-number">2</span>、分组聚合统计查询的视图<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_account;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace force <span class="hljs-keyword">view</span> month_per_num_2023<br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> <span class="hljs-keyword">year</span>,<span class="hljs-keyword">month</span>,<span class="hljs-built_in">sum</span>(usenum) sumuse <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">year</span>,<span class="hljs-keyword">month</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> <span class="hljs-keyword">year</span>,<span class="hljs-keyword">month</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> month_per_num_2023;<br></code></pre></td></tr></table></figure></div>

<h4 id="物化视图"><a href="#物化视图" class="headerlink" title="物化视图"></a>物化视图</h4><p>​	视图是一个虚拟表（也可以认为是一条语句），基于它创建时指定的查询语句返回的结果集。每次访问它都会导致这个查询语句被执行一次。为了避免每次访问都执行这个查询，可以将这个查询结果集存储到一个物化视图（也叫实体化视图）。物化视图与普通的视图相比的区别是物化视图是建立的副本，它类似于一张表，需要占用存储空间。而对一个物化视图查询的执行效率与查询一个表是一样的。</p>
<ul>
<li>创建物化视图语法</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> meterialized <span class="hljs-keyword">view</span> view_name<br>[build immediate <span class="hljs-operator">|</span> build deferred]<br>refresh [fast <span class="hljs-operator">|</span> complete <span class="hljs-operator">|</span> force]<br>[<br> <span class="hljs-keyword">on</span> [<span class="hljs-keyword">commit</span> <span class="hljs-operator">|</span> demand]    <span class="hljs-operator">|</span> <span class="hljs-keyword">start</span> <span class="hljs-keyword">with</span> (start_time) next (next_time)<br>]<br><span class="hljs-keyword">as</span><br>subquery<br><br>build immediate:是在创建物化视图的时候就生成数据。<br>build dererred:则在创建时不生成数据，以后根据需要再生成数据。默认为 build immediate。<br>refresh:指当基表发生了 DML 操作后，物化视图何时采用哪种方式和基表进行同步。[fast <span class="hljs-operator">|</span> complete<span class="hljs-operator">|</span>force] fast采用增量刷新，只刷新自上次刷新以后进行的修改。complete刷新对整个物化视图进行完全的刷新。force方式，则 Oracle 在刷新时会去判断是否可以进行快速刷新，如果可以则采用 fast 方式，否则采用 complete的方式，force 是默认的方式。<br>刷新模式：<span class="hljs-keyword">on</span> <span class="hljs-keyword">commit</span>和<span class="hljs-keyword">on</span> demand两种， <span class="hljs-keyword">on</span> demand指需要手动刷新物化视图（默认）。<span class="hljs-keyword">on</span> <span class="hljs-keyword">commit</span>指在基表发生<span class="hljs-keyword">commit</span>操作时自动刷新.<br><br></code></pre></td></tr></table></figure></div>

<ul>
<li>创建手动刷新的物化视图</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> meterialized <span class="hljs-keyword">view</span> mv_v1<br>[build immediate<br>refresh force <span class="hljs-keyword">on</span> demand]<br><span class="hljs-keyword">as</span> <br><span class="hljs-keyword">select</span> twn.<span class="hljs-operator">*</span>,ta.name <span class="hljs-keyword">as</span> addressname <span class="hljs-keyword">from</span> t_owners twn,t_address ta <span class="hljs-keyword">where</span> twn.addressid<span class="hljs-operator">=</span>ta.id(<span class="hljs-operator">+</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_owners <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1004</span>,<span class="hljs-string">&#x27;lili&#x27;</span>,<span class="hljs-number">1003</span>,<span class="hljs-string">&#x27;6-1&#x27;</span>,<span class="hljs-string">&#x27;7895&#x27;</span>,sysdate,<span class="hljs-number">1002</span>);<br><span class="hljs-keyword">commit</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> mv_v2;<br>#物化视图中没有新插入的数据。<br>#PL<span class="hljs-operator">/</span><span class="hljs-keyword">SQL</span>执行<br><span class="hljs-keyword">begin</span><br>DBMS_MVIEW.refresh(<span class="hljs-string">&#x27;mv_v2&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>);<br><span class="hljs-keyword">end</span>;<br>#或者在命令行执行<br><span class="hljs-keyword">EXEC</span> DBMS_MVIEW.refresh(<span class="hljs-string">&#x27;mv_v2&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>);<br>#DBMS_MVIEW.refresh 实际上是系统内置的存储过程<br></code></pre></td></tr></table></figure></div>

<ul>
<li>创建自动刷新的物化视图</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> materialized <span class="hljs-keyword">view</span> mv_v3<br>build immediate<br>refresh force<br><span class="hljs-keyword">on</span> <span class="hljs-keyword">commit</span><br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> twn.<span class="hljs-operator">*</span>,ta.name <span class="hljs-keyword">as</span> addressname <span class="hljs-keyword">from</span> t_owners twn,t_address ta <span class="hljs-keyword">where</span> twn.addressid<span class="hljs-operator">=</span>ta.id(<span class="hljs-operator">+</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_owners <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1005</span>,<span class="hljs-string">&#x27;longlong&#x27;</span>,<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;6-2&#x27;</span>,<span class="hljs-string">&#x27;1234&#x27;</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">commit</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> mv_v3;<br></code></pre></td></tr></table></figure></div>

<ul>
<li>创建时不生成数据的物化视图</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> materailized <span class="hljs-keyword">view</span> mv_v4<br>build deferred<br>refresh force <span class="hljs-keyword">on</span> <span class="hljs-keyword">commit</span><br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> twn.<span class="hljs-operator">*</span>,ta.name <span class="hljs-keyword">as</span> addressname <span class="hljs-keyword">from</span> t_owners twn,t_address ta <span class="hljs-keyword">where</span> twn.addressid<span class="hljs-operator">=</span>ta.id(<span class="hljs-operator">+</span>);<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> mv_v4;<br><br><span class="hljs-keyword">begin</span><br>DBMS_MVIEW.refresh(<span class="hljs-string">&#x27;mv_v4&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>);<br><span class="hljs-keyword">end</span>;<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_owners <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1006</span>,<span class="hljs-string">&#x27;chuan&#x27;</span>,<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;7-2&#x27;</span>,<span class="hljs-string">&#x27;7534&#x27;</span>,sysdate,<span class="hljs-number">1003</span>);<br><span class="hljs-keyword">commit</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> mv_v4;<br></code></pre></td></tr></table></figure></div>

<ul>
<li>删除物化视图</li>
</ul>
<figure class="highlight n1ql"><table><tr><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">drop</span> <span class="hljs-keyword">materialized</span> <span class="hljs-keyword">view</span> view_name;<br></code></pre></td></tr></table></figure>

<ul>
<li>创建增量刷新的物化视图</li>
</ul>
<p>如果创建增量刷新的物化视图，必须首先创建物化视图日志</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#创建物化视图日志<br><span class="hljs-keyword">create</span> materialized <span class="hljs-keyword">view</span> log <span class="hljs-keyword">on</span> t_owners <span class="hljs-keyword">with</span> rowid;<br><span class="hljs-keyword">create</span> materialized <span class="hljs-keyword">view</span> log <span class="hljs-keyword">on</span> t_address <span class="hljs-keyword">with</span> rowid;<br><br><span class="hljs-keyword">create</span> materialized <span class="hljs-keyword">view</span> mv_v5<br>build immediate<br>refresh fast<br><span class="hljs-keyword">on</span> <span class="hljs-keyword">commit</span><br><span class="hljs-keyword">as</span><br><span class="hljs-keyword">select</span> twn.<span class="hljs-operator">*</span>,twn.rowid <span class="hljs-keyword">as</span> twnrowid,ta.rowid <span class="hljs-keyword">as</span> tarowid,ta.name <span class="hljs-keyword">as</span> addressname <span class="hljs-keyword">from</span> t_owners twn,t_address ta <span class="hljs-keyword">where</span> twn.addressid<span class="hljs-operator">=</span>ta.id(<span class="hljs-operator">+</span>);<br><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_owners <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">1007</span>,<span class="hljs-string">&#x27;su&#x27;</span>,<span class="hljs-number">1002</span>,<span class="hljs-string">&#x27;8-2&#x27;</span>,<span class="hljs-string">&#x27;3455&#x27;</span>,sysdate,<span class="hljs-number">1002</span>);<br><span class="hljs-keyword">commit</span>;<br>#创建增量刷新的物化视图，必须：<br>#<span class="hljs-number">1</span>、创建物化视图中涉及表的物化视图日志。<br>#<span class="hljs-number">2</span>、在查询语句中，必须包含所有表的rowid(以rowid方式建立物化视图日志)<br></code></pre></td></tr></table></figure></div>

<h2 id="8、序列"><a href="#8、序列" class="headerlink" title="8、序列"></a>8、序列</h2><p>序列是 ORACLE 提供的用于产生一系列唯一数字的数据库对象。</p>
<h4 id="创建序列语法"><a href="#创建序列语法" class="headerlink" title="创建序列语法"></a>创建序列语法</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> sequence sequence_name;<br></code></pre></td></tr></table></figure></div>

<p>通过序列的伪列来访问序列的值,NEXTVAL 返回序列的下一个值,CURRVAL 返回序列的当前值</p>
<blockquote>
<p>注意：我们在刚建立序列后，无法提取当前值，只有先提取下一个值时才能再次提取当前值。</p>
</blockquote>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> sequence sequence_one;<br><span class="hljs-keyword">select</span> sequence_one.nextval <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">select</span> sequence_one.currval <span class="hljs-keyword">from</span> dual;<br></code></pre></td></tr></table></figure></div>

<h4 id="创建复杂序列"><a href="#创建复杂序列" class="headerlink" title="创建复杂序列"></a>创建复杂序列</h4><ul>
<li>语法：</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> sequence sequence_one<br>[increment <span class="hljs-keyword">by</span> n] #递增的序列值是n 如果n是正数就递增,如果是负数就递减 默认是<span class="hljs-number">1</span><br>[<span class="hljs-keyword">start</span> <span class="hljs-keyword">with</span> n] #开始的值,递增默认是 minvalue 递减是 maxvalue<br>[&#123;maxvalue n<span class="hljs-operator">|</span>nomaxvalue&#125;] #最大值<br>[&#123;minvalue n<span class="hljs-operator">|</span>nominvalue&#125;]#最小值<br>[&#123;<span class="hljs-keyword">cycle</span> <span class="hljs-operator">|</span> nocycle&#125;] #循环<br>[&#123;cache n <span class="hljs-operator">|</span> nocache&#125;] #分配并存入到内存中<br></code></pre></td></tr></table></figure></div>

<ul>
<li>创建有最大值的非循环序列</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> sequence seq_1<br>increment <span class="hljs-keyword">by</span> <span class="hljs-number">20</span><br>maxvalue <span class="hljs-number">100</span><br>minvalue <span class="hljs-number">20</span><br>nocycle;<br><span class="hljs-keyword">select</span> seq_1.nextval <span class="hljs-keyword">from</span> dual;<br></code></pre></td></tr></table></figure></div>

<ul>
<li>有最大值的循环序列</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> sequence seq_2<br>increment <span class="hljs-keyword">by</span> <span class="hljs-number">20</span><br>maxvalue <span class="hljs-number">100</span><br>minvalue <span class="hljs-number">20</span><br><span class="hljs-keyword">cycle</span><br>cache <span class="hljs-number">4</span>;<br></code></pre></td></tr></table></figure></div>

<blockquote>
<p>注意：CACHE &lt;&#x3D; CEIL((MAXVALUE - MINVALUE) &#x2F; ABS(INCREMENT))<br>例如：cache &lt;&#x3D;ceil(100-20)&#x2F;abs(20)</p>
</blockquote>
<h4 id="修改和删除序列"><a href="#修改和删除序列" class="headerlink" title="修改和删除序列"></a>修改和删除序列</h4><p>修改序列：使用 ALTER SEQUENCE 语句修改序列，不能更改序列的 STARTWITH 参数</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> SEQUENCE 序列名称 MAXVALUE <span class="hljs-number">5000</span> <span class="hljs-keyword">CYCLE</span>;<br><span class="hljs-keyword">alter</span> sequence seq_1 maxvalue <span class="hljs-number">300</span> <span class="hljs-keyword">cycle</span> cache <span class="hljs-number">14</span>;<br></code></pre></td></tr></table></figure></div>

<p>删除序列</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">DROP</span> SEQUENCE 序列名称;<br><span class="hljs-keyword">drop</span> sequence seq_1;<br></code></pre></td></tr></table></figure></div>

<h2 id="9、同义词"><a href="#9、同义词" class="headerlink" title="9、同义词"></a>9、同义词</h2><p>​	同义词实质上是指定方案对象的一个别名。通过屏蔽对象的名称和所有者以及对分布式数据库的远程对象提供位置透明性，同义词可以提供一定程度的安全性。同时，同义词的易用性较好，降低了数据库用户的 SQL 语句复杂度。</p>
<p>​	同义词允许基对象重命名或者移动，这时，只需对同义词进行重定义，基于同义词的应用程序可以继续运行而无需修改。</p>
<p>​	同义词本身不涉及安全，当你赋予一个同义词对象权限时，你实质上是在给同义词的基对象赋予权限，同义词只是基对象的一个别名。</p>
<h4 id="创建与使用同义词"><a href="#创建与使用同义词" class="headerlink" title="创建与使用同义词"></a>创建与使用同义词</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> [public] SYNONYM synonym <span class="hljs-keyword">for</span> object<br>synonym:创建的同义词的名称<br>object:表示表，视图，序列等我们要创建同义词的对象的名称.创建共有的同义词，以另外的用户登陆，也可以使用公有同义词<br><span class="hljs-keyword">create</span> public SYNONYM twn <span class="hljs-keyword">for</span> t_owners;<br>创建私有的同义词<br><span class="hljs-keyword">create</span> SYNONYM twn1 <span class="hljs-keyword">for</span> t_owners;<br></code></pre></td></tr></table></figure></div>

<h2 id="10、索引"><a href="#10、索引" class="headerlink" title="10、索引"></a>10、索引</h2><p>索引是用于加速数据存取的数据对象。合理的使用索引可以大大降低 i&#x2F;o 次数,从而提高数据访问性能。</p>
<p>索引是需要占据存储空间的，也可以理解为是一种特殊的数据。形式类似于下图的一棵“树”，而树的节点存储的就是每条记录的物理地址，也就是我们提到的伪列（ROWID）</p>
<h4 id="普通索引"><a href="#普通索引" class="headerlink" title="普通索引"></a>普通索引</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> index index_name <span class="hljs-keyword">on</span> table_name(column_name);#根据某张表的某列来创建索引。<br><span class="hljs-keyword">create</span> index t_owners_name <span class="hljs-keyword">on</span> t_owners(name);<br><br>#索引性能测试<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> T_INDEXTEST (<br>ID NUMBER,<br>NAME VARCHAR2(<span class="hljs-number">30</span>)<br>);<br><span class="hljs-keyword">BEGIN</span><br><span class="hljs-keyword">FOR</span> i <span class="hljs-keyword">in</span> <span class="hljs-number">1.</span><span class="hljs-number">.1000000</span><br>loop<br><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> T_INDEXTEST <span class="hljs-keyword">VALUES</span>(i,<span class="hljs-string">&#x27;AA&#x27;</span><span class="hljs-operator">||</span>i);<br><span class="hljs-keyword">end</span> loop;<br><span class="hljs-keyword">commit</span>;<br><span class="hljs-keyword">END</span>;<br><br><span class="hljs-keyword">create</span> index t_indextest_name <span class="hljs-keyword">on</span> t_indextest(name);<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_indextest <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">765432</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_indextest <span class="hljs-keyword">where</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;AA765432&#x27;</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h4><p>如果我们需要在某个表某个列创建索引，而这列的值是不会重复的。这是我们可以创建唯一索引。</p>
<p>语法</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">unique</span> index index_name <span class="hljs-keyword">on</span> table_name(column_name);<br></code></pre></td></tr></table></figure></div>

<h4 id="复合索引"><a href="#复合索引" class="headerlink" title="复合索引"></a>复合索引</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> index index_name <span class="hljs-keyword">on</span> table_name(column_name,column_name);<br></code></pre></td></tr></table></figure></div>

<h4 id="反向键索引"><a href="#反向键索引" class="headerlink" title="反向键索引"></a>反向键索引</h4><p>​	应用场景：当某个字段的值为连续增长的值，如果构建标准索引，会形成歪脖子树。这样会增加查询的层数，性能会下降。建立反向键索引，可以使索引的值变得不规则，从而使索引树能够均匀分布。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> index 索引名称 <span class="hljs-keyword">on</span> 表名(列名) reverse;<br><span class="hljs-keyword">create</span> index t_indextest_name_reverse <span class="hljs-keyword">on</span> t_indextest(id) reverse;<br></code></pre></td></tr></table></figure></div>

<h4 id="位图索引"><a href="#位图索引" class="headerlink" title="位图索引"></a>位图索引</h4><ul>
<li>使用场景：位图索引适合创建在低基数列上</li>
<li>位图索引不直接存储 ROWID，而是存储字节位到 ROWID 的映射</li>
<li>优点：减少响应时间，节省空间占用</li>
</ul>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> bitmap index index_name table_name(column_name);<br></code></pre></td></tr></table></figure></div>

<h2 id="11、PL-SQL"><a href="#11、PL-SQL" class="headerlink" title="11、PL&#x2F;SQL"></a>11、PL&#x2F;SQL</h2><p>PL&#x2F;SQL（Procedure Language&#x2F;SQL）是 Oracle 对 sql 语言的过程化扩展，指在 SQL 命令语言中增加了过程处理语句（如分支、循环等），使 SQL 语言具有过程处理能力。把 SQL 语言的数据操纵能力与过程语言的数据处理能力结合起来，使得 PLSQL 面向过程但比过程语言简单、高效、灵活和实用。</p>
<h4 id="基本语法结构"><a href="#基本语法结构" class="headerlink" title="基本语法结构"></a>基本语法结构</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">[<span class="hljs-keyword">declare</span>  <span class="hljs-comment">--声明变量]</span><br><span class="hljs-keyword">begin</span><br>逻辑代码<br>[exception <span class="hljs-comment">--异常处理]</span><br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">声明变量的语法<br>变量名 类型(长度)<br>变量赋值语法<br>变量名:<span class="hljs-operator">=</span>变量值<br><span class="hljs-keyword">declare</span><br>v_price number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_usenum number;<br>v_usenum2 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_money(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">begin</span><br>v_price:<span class="hljs-operator">=</span><span class="hljs-number">2.45</span>;<br>v_usenum:<span class="hljs-operator">=</span><span class="hljs-number">8012</span>;<br>v_usenum2:<span class="hljs-operator">=</span>round(v_usenum<span class="hljs-operator">/</span><span class="hljs-number">1000</span>,<span class="hljs-number">2</span>);<br>v_money:<span class="hljs-operator">=</span>round(v_price<span class="hljs-operator">*</span>v_usenum2,<span class="hljs-number">2</span>);<br>dbms_output.put_line(<span class="hljs-string">&#x27;单价：&#x27;</span><span class="hljs-operator">||</span>v_price<span class="hljs-operator">||</span><span class="hljs-string">&#x27;吨数:&#x27;</span><span class="hljs-operator">||</span>v_usenum2<span class="hljs-operator">||</span><span class="hljs-string">&#x27;金额：&#x27;</span><span class="hljs-operator">||</span>v_money);<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<p>select into方式赋值</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> 列名 <span class="hljs-keyword">into</span> 变量名 <span class="hljs-keyword">from</span> 表名 <span class="hljs-keyword">where</span> 条件;<br></code></pre></td></tr></table></figure></div>

<blockquote>
<p>注意：结果必须是一条记录 ，有多条记录和没有记录都会报错</p>
</blockquote>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> usenum,num0,num1 <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-number">2023</span> <span class="hljs-keyword">and</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br><br><span class="hljs-keyword">declare</span><br>v_price number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_usenum number;<br>v_usenum2 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_num0 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_num1 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_money number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">begin</span><br>v_price:<span class="hljs-operator">=</span><span class="hljs-number">2.45</span>;<br><span class="hljs-keyword">select</span> usenum,num0,num1 <span class="hljs-keyword">into</span> v_usenum,v_num0,v_num1 <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-number">2023</span> <span class="hljs-keyword">and</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>v_usenum2:<span class="hljs-operator">=</span>round(v_usenum<span class="hljs-operator">/</span><span class="hljs-number">1000</span>,<span class="hljs-number">2</span>);<br>v_money:<span class="hljs-operator">=</span>round(v_price<span class="hljs-operator">*</span>v_usenum2,<span class="hljs-number">2</span>);<br>dbms_output.put_line(<span class="hljs-string">&#x27;单价：&#x27;</span><span class="hljs-operator">||</span>v_price<span class="hljs-operator">||</span><span class="hljs-string">&#x27;吨数：&#x27;</span><span class="hljs-operator">||</span>v_usenum2<span class="hljs-operator">||</span><span class="hljs-string">&#x27;金额：&#x27;</span><span class="hljs-operator">||</span>v_money<span class="hljs-operator">||</span><span class="hljs-string">&#x27;上月字数：&#x27;</span><span class="hljs-operator">||</span>v_num0<span class="hljs-operator">||</span><span class="hljs-string">&#x27;本月字数&#x27;</span><span class="hljs-operator">||</span>v_num1);<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="属性类型"><a href="#属性类型" class="headerlink" title="属性类型"></a>属性类型</h4><p>%TYPE 引用型  作用：引用某表某列的字段类型</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span><br>v_price number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_usenum t_account.usenum<span class="hljs-operator">%</span>TYPE;<br>v_num0 t_account.num0<span class="hljs-operator">%</span>TYPE;<br>v_num1 t_account.num1<span class="hljs-operator">%</span>TYPE;<br>v_usenum2 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_money number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">begin</span><br>v_price:<span class="hljs-operator">=</span><span class="hljs-number">2.55</span>;<br><span class="hljs-keyword">select</span> usenum,num0,num1 <span class="hljs-keyword">into</span> v_usenum,v_num0,v_num1 <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-number">2023</span> <span class="hljs-keyword">and</span> id<span class="hljs-operator">=</span><span class="hljs-number">3</span>;<br>v_usenum2:<span class="hljs-operator">=</span>round(v_usenum<span class="hljs-operator">/</span><span class="hljs-number">1000</span>,<span class="hljs-number">2</span>);<br>v_money:<span class="hljs-operator">=</span>v_price<span class="hljs-operator">*</span>v_usenum2;<br>dbms_output.put_line(<span class="hljs-string">&#x27;单价：&#x27;</span><span class="hljs-operator">||</span>v_price<span class="hljs-operator">||</span><span class="hljs-string">&#x27;吨数：&#x27;</span><span class="hljs-operator">||</span>v_usenum2<span class="hljs-operator">||</span><span class="hljs-string">&#x27;金额：&#x27;</span><span class="hljs-operator">||</span>v_money<span class="hljs-operator">||</span><span class="hljs-string">&#x27;上月字数：&#x27;</span><span class="hljs-operator">||</span>v_num0<span class="hljs-operator">||</span><span class="hljs-string">&#x27;本月字数&#x27;</span><span class="hljs-operator">||</span>v_num1);<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<p>%ROWTYPE 记录型 ，上例中的例子可以用下面的代码代替作用: 标识某个表的行记录类型</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span><br>v_price number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_account t_account<span class="hljs-operator">%</span>ROWTYPE;<br>v_usenum2 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_money number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">begin</span><br>v_price:<span class="hljs-operator">=</span><span class="hljs-number">3.14</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">into</span> v_account <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-number">2023</span> <span class="hljs-keyword">and</span> id<span class="hljs-operator">=</span><span class="hljs-number">3</span>;<br>v_usenum2:<span class="hljs-operator">=</span>round(v_account.usenum<span class="hljs-operator">/</span><span class="hljs-number">1000</span>,<span class="hljs-number">2</span>);<br>v_money:<span class="hljs-operator">=</span>v_price<span class="hljs-operator">*</span>v_usenum2;<br>DBMS_OUTPUT.put_line(<span class="hljs-string">&#x27;单价：&#x27;</span><span class="hljs-operator">||</span>v_price<span class="hljs-operator">||</span><span class="hljs-string">&#x27;吨数：&#x27;</span><span class="hljs-operator">||</span>v_usenum2<span class="hljs-operator">||</span><span class="hljs-string">&#x27;金额：&#x27;</span><span class="hljs-operator">||</span>v_money<span class="hljs-operator">||</span><span class="hljs-string">&#x27;上月字数：&#x27;</span><span class="hljs-operator">||</span>v_account.num0<span class="hljs-operator">||</span><span class="hljs-string">&#x27;本月字数&#x27;</span><span class="hljs-operator">||</span>v_account.num1);<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h4><p>在运行程序时出现的错误叫做异常，发生异常后，语句将停止执行，控制权转移到 PL&#x2F;SQL 块的异常处理部分</p>
<p>异常有两种类型：</p>
<ul>
<li>预定义异常 - 当 PL&#x2F;SQL 程序违反 Oracle 规则或超越系统限制时隐式引发。</li>
<li>用户定义异常 - 用户可以在 PL&#x2F;SQL 块的声明部分定义异常，自定义的异常通过 RAISE 语句显式引发。</li>
</ul>
<p>oracle预定义的异常21个</p>
<table>
<thead>
<tr>
<th>系统异常</th>
<th>产生原因</th>
</tr>
</thead>
<tbody><tr>
<td>ACCESS_INTO_NULL</td>
<td>未定义对象</td>
</tr>
<tr>
<td>CASE_NOT_FOUND</td>
<td>CASE 中若未包含相应的 WHEN ，并且没有设置 ELSE 时</td>
</tr>
<tr>
<td>COLLECTION_IS_NULL</td>
<td>集合元素未初始化</td>
</tr>
<tr>
<td>CURSER_ALREADY_OPEN</td>
<td>游标已经打开</td>
</tr>
<tr>
<td>DUP_VAL_ON_INDEX</td>
<td>唯一索引对应的列上有重复值</td>
</tr>
<tr>
<td>INVALID_CURSOR</td>
<td>在不合法的游标上进行操作</td>
</tr>
<tr>
<td>INVALID_NUMBER</td>
<td>内置的SQL语句不能将字符转化为数字</td>
</tr>
<tr>
<td><em><strong>NO_DATA_FOUND</strong></em></td>
<td><em><strong>使用select into 没有行返回行</strong></em></td>
</tr>
<tr>
<td><em><strong>TOO_MANY_ROWS</strong></em></td>
<td><em><strong>使用select into 有多行数据返回</strong></em></td>
</tr>
<tr>
<td>ZERO_DIVIDE</td>
<td>除数为0</td>
</tr>
<tr>
<td>SUBSCRIPT_BEYOND_COUNT</td>
<td>元素下标超过嵌套表或 VARRAY 的最大值</td>
</tr>
<tr>
<td>SUBSCRIPT_OUTSIDE_LIMIT</td>
<td>使用嵌套表或 VARRAY 时，将下标指定为负数</td>
</tr>
<tr>
<td>VALUE_ERROR</td>
<td>赋值时，变量长度不足以容纳实际数据</td>
</tr>
<tr>
<td>LOGIN_DENIED</td>
<td>PL&#x2F;SQL 应用程序连接到 oracle 数据库时，提供了不正确的用户名或密码</td>
</tr>
<tr>
<td>NOT_LOGGED_ON</td>
<td>PL&#x2F;SQL 应用程序在没有连接 oralce 数据库的情况下访问数据</td>
</tr>
<tr>
<td>PROGRAM_ERROR</td>
<td>PL&#x2F;SQL 内部问题，可能需要重装数据字典＆ PL&#x2F;SQL 系统包</td>
</tr>
<tr>
<td>ROWTYPE_MISMATCH</td>
<td>宿主游标变量与 PL&#x2F;SQL 游标变量的返回类型不兼容</td>
</tr>
<tr>
<td>SELF_IS_NULL</td>
<td>使用对象类型时，在 NULL对象上调用对象方法</td>
</tr>
<tr>
<td>STORAGE_ERROR</td>
<td>运行 PL&#x2F;SQL 时，超出内存空间</td>
</tr>
<tr>
<td>SYS_INVALID_ID</td>
<td>无效的 ROWID 字符串</td>
</tr>
<tr>
<td>TIMEOUT_ON_RESOURCE</td>
<td>Oracle 在等待资源时超时</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>语法结构：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">exception<br><span class="hljs-keyword">when</span> 异常类型 <span class="hljs-keyword">then</span><br>异常处理逻辑<br></code></pre></td></tr></table></figure></div>

<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span><br>v_price number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_usenum t_account.usenum<span class="hljs-operator">%</span>TYPE;<br>v_usenum2 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_money number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">begin</span><br>v_price:<span class="hljs-operator">=</span><span class="hljs-number">3.55</span>;<br><span class="hljs-keyword">select</span> usenum <span class="hljs-keyword">into</span> v_usenum <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-number">2023</span> <span class="hljs-keyword">and</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>v_usenum2:<span class="hljs-operator">=</span>round(v_usenum<span class="hljs-operator">/</span><span class="hljs-number">1000</span>,<span class="hljs-number">2</span>);<br>v_money:<span class="hljs-operator">=</span>v_price<span class="hljs-operator">*</span>v_usenum2;<br>dbms_output.put_line(<span class="hljs-string">&#x27;单价：&#x27;</span><span class="hljs-operator">||</span>v_price<span class="hljs-operator">||</span><span class="hljs-string">&#x27;吨数:&#x27;</span><span class="hljs-operator">||</span>v_usenum2<span class="hljs-operator">||</span><span class="hljs-string">&#x27;金额：&#x27;</span><span class="hljs-operator">||</span>v_money);<br>exception<br><span class="hljs-keyword">when</span> NO_DATA_FOUND <span class="hljs-keyword">then</span><br>dbms_output.put_line(<span class="hljs-string">&#x27;未找到数据，请核实&#x27;</span>);<br><span class="hljs-keyword">when</span> TOO_MANY_ROWS <span class="hljs-keyword">then</span><br>dbms_output.put_line(<span class="hljs-string">&#x27;查询条件有误，返回多条信息，请核实&#x27;</span>);<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#基本语法<span class="hljs-number">1</span><br>if 条件 <span class="hljs-keyword">then</span><br> 业务逻辑<br><span class="hljs-keyword">end</span> if;<br><br>#基本语法<span class="hljs-number">2</span><br>if 条件 <span class="hljs-keyword">then</span><br>业务逻辑<br><span class="hljs-keyword">else</span><br>业务逻辑<br><span class="hljs-keyword">end</span> if;<br><br>#基本语法<span class="hljs-number">3</span><br>if 条件 <span class="hljs-keyword">then</span><br>业务逻辑<br>elseif 条件 <span class="hljs-keyword">then</span><br>业务逻辑<br><span class="hljs-keyword">else</span><br>业务逻辑<br><span class="hljs-keyword">end</span> if;<br></code></pre></td></tr></table></figure></div>

<p>需求：设置三个等级的水费 5 吨以下 2.45 元&#x2F;吨 5 吨到 10 吨部分 3.45 元&#x2F;吨 ，超过 10 吨部分 4.45 ，根据使用水费的量来计算阶梯水费。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span><br>v_price1 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_price2 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_price3 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_account t_account<span class="hljs-operator">%</span>ROWTYPE;<br>v_usenum2 number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br>v_money number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>);<br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">into</span> v_account <span class="hljs-keyword">from</span> t_account <span class="hljs-keyword">where</span> <span class="hljs-keyword">year</span><span class="hljs-operator">=</span><span class="hljs-number">2023</span> <span class="hljs-keyword">and</span> id<span class="hljs-operator">=</span><span class="hljs-number">3</span>;<br>v_usenum2:<span class="hljs-operator">=</span>round(v_account.usenum<span class="hljs-operator">/</span><span class="hljs-number">1000</span>,<span class="hljs-number">2</span>);<br>v_price1:<span class="hljs-operator">=</span><span class="hljs-number">2.45</span>;<br>v_price2:<span class="hljs-operator">=</span><span class="hljs-number">3.45</span>;<br>v_price3:<span class="hljs-operator">=</span><span class="hljs-number">4.45</span>;<br>if v_usenum2<span class="hljs-operator">&lt;</span><span class="hljs-number">5</span> <span class="hljs-keyword">then</span><br>v_money:<span class="hljs-operator">=</span>v_price1<span class="hljs-operator">*</span>v_usenum2;<br>elsif <span class="hljs-number">5</span><span class="hljs-operator">&lt;</span>v_usenum2 <span class="hljs-keyword">and</span> v_usenum2<span class="hljs-operator">&lt;</span><span class="hljs-number">10</span> <span class="hljs-keyword">then</span><br>v_money:<span class="hljs-operator">=</span>v_price1<span class="hljs-operator">*</span><span class="hljs-number">5</span><span class="hljs-operator">+</span>v_price2<span class="hljs-operator">*</span>(v_usenum2<span class="hljs-number">-5</span>);<br><span class="hljs-keyword">else</span><br>v_money:<span class="hljs-operator">=</span>v_price1<span class="hljs-operator">*</span><span class="hljs-number">5</span><span class="hljs-operator">+</span>v_price2<span class="hljs-operator">*</span><span class="hljs-number">5</span><span class="hljs-operator">+</span>v_price3<span class="hljs-operator">*</span>(v_usenum2<span class="hljs-number">-5</span>);<br><span class="hljs-keyword">end</span> if;<br>dbms_output.put_line(<span class="hljs-string">&#x27;吨数：&#x27;</span><span class="hljs-operator">||</span>v_usenum2<span class="hljs-operator">||</span><span class="hljs-string">&#x27;金额：&#x27;</span><span class="hljs-operator">||</span>v_money<span class="hljs-operator">||</span><span class="hljs-string">&#x27;上月字数：&#x27;</span><span class="hljs-operator">||</span>v_account.num0<span class="hljs-operator">||</span><span class="hljs-string">&#x27;本月字数&#x27;</span><span class="hljs-operator">||</span>v_account.num1);<br>exception<br><span class="hljs-keyword">when</span> NO_DATA_FOUND <span class="hljs-keyword">then</span><br>dbms_output.put_line(<span class="hljs-string">&#x27;未找到数据，请核实&#x27;</span>);<br><span class="hljs-keyword">when</span> TOO_MANY_ROWS <span class="hljs-keyword">then</span><br>dbms_output.put_line(<span class="hljs-string">&#x27;有多行数据被查询&#x27;</span>);<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><ol>
<li>无条件循环</li>
</ol>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">loop<br>循环语句<br><span class="hljs-keyword">end</span> loop;<br><br>#例子<br><span class="hljs-keyword">declare</span><br>v_num number;<br><span class="hljs-keyword">begin</span><br>v_num:<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br>loop<br>dbms_output.put_line(<span class="hljs-string">&#x27;v_num=&#x27;</span><span class="hljs-operator">||</span>v_num);<br>v_num:<span class="hljs-operator">=</span>v_num<span class="hljs-operator">+</span><span class="hljs-number">1</span>;<br>if v_num<span class="hljs-operator">=</span><span class="hljs-number">100</span> <span class="hljs-keyword">then</span><br>exit;<br><span class="hljs-keyword">end</span> if;<br><span class="hljs-keyword">end</span> loop;<br><span class="hljs-keyword">end</span>;<br><br>#循环部分可以改写成<br>loop<br>dbms_output.put_line(<span class="hljs-string">&#x27;v_num=&#x27;</span><span class="hljs-operator">||</span>v_num);<br>v_num:<span class="hljs-operator">=</span>v_num<span class="hljs-operator">+</span><span class="hljs-number">1</span>;<br>exit <span class="hljs-keyword">when</span> v_num<span class="hljs-operator">&gt;</span><span class="hljs-number">100</span>;<br><span class="hljs-keyword">end</span> loop;<br></code></pre></td></tr></table></figure></div>

<pre><code> 2.条件循环
</code></pre>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">while 条件<br>loop<br>循环体<br><span class="hljs-keyword">end</span> loop;<br><br>#范例：输出从<span class="hljs-number">1</span>开始的<span class="hljs-number">100</span>个数<br><span class="hljs-keyword">declare</span><br>v_num number;<br><span class="hljs-keyword">begin</span><br>v_num:<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br>while v_num<span class="hljs-operator">&lt;</span><span class="hljs-number">101</span><br>loop<br>dbms_output.put_line(<span class="hljs-string">&#x27;v_num=&#x27;</span><span class="hljs-operator">||</span>v_num);<br>v_num:<span class="hljs-operator">=</span>v_num<span class="hljs-operator">+</span><span class="hljs-number">1</span>;<br><span class="hljs-keyword">end</span> loop;<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<p>​	3.for循环</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql">#基本语法<br><span class="hljs-keyword">for</span> 变量 <span class="hljs-keyword">in</span> 起始值..终值<br>loop <br>循环体<br><span class="hljs-keyword">end</span> loop;<br><br><br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">for</span> v_num <span class="hljs-keyword">in</span> <span class="hljs-number">0.</span><span class="hljs-number">.100</span><br>loop<br>dbms_output.put_line(<span class="hljs-string">&#x27;v_num=&#x27;</span><span class="hljs-operator">||</span>v_num);<br><span class="hljs-keyword">end</span> loop;<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h4><p>游标是系统为用户开设的一个数据缓冲区,存放 SQL 语句的执行结果。我们可以把游标理解为 PL&#x2F;SQL 中的结果集。</p>
<p>在声明区声明游标，语法如下：</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">cursor</span> 游标名称 <span class="hljs-keyword">is</span> <span class="hljs-keyword">SQL</span> 语句;<br></code></pre></td></tr></table></figure></div>

<p>使用游标语法</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">open</span> 游标名称<br>loop<br>	<span class="hljs-keyword">fetch</span> 游标名称 <span class="hljs-keyword">into</span> 变量;<br>	exit <span class="hljs-keyword">when</span> 游标名称<span class="hljs-operator">%</span>notfound;<br><span class="hljs-keyword">end</span> loop;<br><span class="hljs-keyword">close</span> 游标名称;<br><br><span class="hljs-keyword">declare</span><br>curr_jylsh varchar2(<span class="hljs-number">50</span>);<br><span class="hljs-keyword">cursor</span> lyjsh_cursor <span class="hljs-keyword">is</span> <span class="hljs-keyword">select</span> jylsh <span class="hljs-keyword">from</span> jylsh_table;<br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">open</span> lyjsh_cursor;<br>	loop<br>	<span class="hljs-keyword">fetch</span> lyjsh_cursor <span class="hljs-keyword">into</span> curr_jylsh;<br>	exit <span class="hljs-keyword">when</span> lyjsh_cursor<span class="hljs-operator">%</span>notfound;<br>	<span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_sbf_sb_cxjm_sbbc_fail <span class="hljs-keyword">values</span>(curr_jylsh,sysdate,<span class="hljs-string">&#x27;ljh&#x27;</span>,<span class="hljs-string">&#x27;00&#x27;</span>);<br>	<span class="hljs-keyword">commit</span>;<br>	<span class="hljs-keyword">update</span> sbf_sb_cxjmhdxx <span class="hljs-keyword">set</span> sjclzt<span class="hljs-operator">=</span><span class="hljs-string">&#x27;00&#x27;</span>,xgrq<span class="hljs-operator">=</span>sysdate,xgr_dm<span class="hljs-operator">=</span><span class="hljs-string">&#x27;ljh&#x27;</span> <span class="hljs-keyword">where</span> cxjmhd_id <span class="hljs-keyword">in</span> (<span class="hljs-keyword">select</span> lymx_id <span class="hljs-keyword">from</span> sbf_sb_wyxx <span class="hljs-keyword">where</span> jylsh<span class="hljs-operator">=</span>curr_jylsh);<br>	<span class="hljs-keyword">commit</span>;<br>	<span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> sbf_sb_cxjmwyxx e <span class="hljs-keyword">where</span> e.jylsh<span class="hljs-operator">=</span>curr_jylsh;<br>	<span class="hljs-keyword">commit</span>;<br>	<span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> sbf_sb_cxjm_sbwyxx e <span class="hljs-keyword">where</span> e.jylsh<span class="hljs-operator">=</span>curr_jylsh;<br>	<span class="hljs-keyword">commit</span>;<br>	<span class="hljs-keyword">delete</span> <span class="hljs-keyword">from</span> sbf_sb_wyxx e <span class="hljs-keyword">where</span> e.jylsh<span class="hljs-operator">=</span>curr_jylsh;<br>	<span class="hljs-keyword">commit</span>;<br>	<span class="hljs-keyword">update</span> sbf_sb <br>	<span class="hljs-keyword">end</span> loop;<br><span class="hljs-keyword">close</span> lyjsh_cursor;<br><span class="hljs-keyword">end</span>;<br>	<br></code></pre></td></tr></table></figure></div>

<p>需求：打印业主类型为 1 的价格表</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span> <br>v_pricetable t_pricetable<span class="hljs-operator">%</span>ROWTYPE;<br><span class="hljs-keyword">cursor</span> cur_pricetable <span class="hljs-keyword">is</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_pricetable <span class="hljs-keyword">where</span> ownertypeid<span class="hljs-operator">=</span><span class="hljs-number">1001</span>;<br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">open</span> cur_pricetable;<br>	loop<br>	<span class="hljs-keyword">fetch</span>  cur_pricetable <span class="hljs-keyword">into</span> v_pricetable;<br>	exit <span class="hljs-keyword">when</span> cur_pricetable<span class="hljs-operator">%</span>notfound;<br>	dbms_output.put_line( <span class="hljs-string">&#x27;价格:&#x27;</span><span class="hljs-operator">||</span>v_pricetable.price <span class="hljs-operator">||</span><span class="hljs-string">&#x27;吨位：&#x27;</span><span class="hljs-operator">||</span>v_pricetable.minnum<span class="hljs-operator">||</span><span class="hljs-string">&#x27;-&#x27;</span><span class="hljs-operator">||</span>v_pricetable.maxnum );<br>	<span class="hljs-keyword">end</span> loop;<br><span class="hljs-keyword">close</span> cur_pricetable;<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<p>带参数的游标</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span><br>v_pricetable t_pricetable<span class="hljs-operator">%</span>ROWTYPE;<br><span class="hljs-keyword">cursor</span> cur_pricetable(v_ownertypeid number) <span class="hljs-keyword">is</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_pricetable <span class="hljs-keyword">where</span> ownertypeid<span class="hljs-operator">=</span>v_ownertypeid;<br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">open</span> cur_pricetable(<span class="hljs-number">1001</span>);<br>loop<br>	<span class="hljs-keyword">fetch</span> cur_pricetable <span class="hljs-keyword">into</span> v_pricetable;<br>	exit <span class="hljs-keyword">when</span> cur_pricetable<span class="hljs-operator">%</span>notfound;<br>	dbms_output.put_line(<span class="hljs-string">&#x27;价格:&#x27;</span><span class="hljs-operator">||</span>v_pricetable.price <span class="hljs-operator">||</span><span class="hljs-string">&#x27;吨位：&#x27;</span><span class="hljs-operator">||</span>v_pricetable.minnum<span class="hljs-operator">||</span><span class="hljs-string">&#x27;-&#x27;</span><span class="hljs-operator">||</span>v_pricetable.maxnum );<br><span class="hljs-keyword">end</span> loop;	<br><span class="hljs-keyword">close</span> cur_pricetable;<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<p>for 循环提取游标值</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">declare</span><br><span class="hljs-keyword">cursor</span> cur_pricetable(v_ownertypeid number) <span class="hljs-keyword">is</span> <span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_pricetable <span class="hljs-keyword">where</span> ownertypeid<span class="hljs-operator">=</span>v_ownertypeid;<br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">for</span> cur_pricetable <span class="hljs-keyword">in</span> cur_pricetable(<span class="hljs-number">1001</span>)<br>loop<br>dbms_output.put_line(<span class="hljs-string">&#x27;价格:&#x27;</span><span class="hljs-operator">||</span>cur_pricetable.price <span class="hljs-operator">||</span><span class="hljs-string">&#x27;吨位：&#x27;</span><span class="hljs-operator">||</span>cur_pricetable.minnum<span class="hljs-operator">||</span><span class="hljs-string">&#x27;-&#x27;</span><span class="hljs-operator">||</span>cur_pricetable.maxnum );<br><span class="hljs-keyword">end</span> loop;<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<h2 id="12、存储函数"><a href="#12、存储函数" class="headerlink" title="12、存储函数"></a>12、存储函数</h2><p>存储函数又称为自定义函数。可以接收一个或多个参数，返回一个结果。在函数中我们可以使用 PL&#x2F;SQL 进行逻辑的处理。</p>
<h4 id="存储函数语法结构"><a href="#存储函数语法结构" class="headerlink" title="存储函数语法结构"></a>存储函数语法结构</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">function</span> 函数名称(参数名称 参数类型, 参数名称 参数类型, ...)<br><span class="hljs-keyword">return</span> 结果变量数据类型<br><span class="hljs-keyword">is</span> 变量声明部分;<br><span class="hljs-keyword">begin</span><br>逻辑部分;<br><span class="hljs-keyword">RETURN</span> 结果变量;<br>[exception 异常处理部分]<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span>  <span class="hljs-keyword">function</span> pingping(v_name varchar2,v_age number)<br><span class="hljs-keyword">return</span> varchar2<br><span class="hljs-keyword">is</span><br>v_result varchar2(<span class="hljs-number">30</span>);<br><span class="hljs-keyword">begin</span><br>v_result:<span class="hljs-operator">=</span><span class="hljs-string">&#x27;姓名&#x27;</span><span class="hljs-operator">||</span>v_name<span class="hljs-operator">||</span><span class="hljs-string">&#x27;-年龄&#x27;</span><span class="hljs-operator">||</span>v_age;<br>dbms_output.put_line(<span class="hljs-string">&#x27;==&#x27;</span><span class="hljs-operator">||</span>v_result);<br><span class="hljs-keyword">return</span> v_result;<br><span class="hljs-keyword">end</span>;<br>#调用<br><span class="hljs-keyword">select</span> pingping(<span class="hljs-string">&#x27;suhe&#x27;</span>,<span class="hljs-number">18</span>) <span class="hljs-keyword">from</span> dual;<br></code></pre></td></tr></table></figure></div>

<p>需求：查询业主 ID，业主名称，业主地址，业主地址使用刚才我们创建的函数来实现。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">function</span> ss(v_id number) <span class="hljs-keyword">return</span> varchar2<br><span class="hljs-keyword">is</span><br>address_name varchar2(<span class="hljs-number">100</span>);<br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">select</span> name <span class="hljs-keyword">into</span> address_name <span class="hljs-keyword">from</span> t_address <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span>v_id;<br><span class="hljs-keyword">return</span> address_name;<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-keyword">select</span> id,name,ss(addressid) <span class="hljs-keyword">from</span> t_owners;<br></code></pre></td></tr></table></figure></div>

<h2 id="13、存储过程"><a href="#13、存储过程" class="headerlink" title="13、存储过程"></a>13、存储过程</h2><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>存储过程是被命名的 PL&#x2F;SQL 块，存储于数据库中，是数据库对象的一种。应用程序可以调用存储过程，执行相应的逻辑。</p>
<p>存储过程与存储函数都可以封装一定的业务逻辑并返回结果，存在区别如下：<br>1、存储函数中有返回值，且必须返回；而存储过程没有返回值，可以通过传出参数返回多个值。<br>2、存储函数可以在 select 语句中直接使用，而存储过程不能。过程多数是被应用程序所调用。<br>3、存储函数一般都是封装一个查询结果，而存储过程一般都封装一段事务代码。</p>
<h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">procedure</span> 存储过程名字(参数<span class="hljs-number">1</span> 类型,参数<span class="hljs-number">2</span> 类型)<br><span class="hljs-keyword">is</span><span class="hljs-operator">|</span><span class="hljs-keyword">as</span><br>变量申明;<br><span class="hljs-keyword">begin</span><br>逻辑部分;<br>[exception 异常处理部分]<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<blockquote>
<p>参数只指定类型，不指定长度</p>
</blockquote>
<p>过程参数的三种模式：IN 传入参数（默认）,OUT 传出参数 ，主要用于返回程序运行结果,IN OUT 传入传出参数</p>
<h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>1、创建不带传出参数的存储过程：添加业主信息</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> sequence owner_sequence <span class="hljs-keyword">start</span> <span class="hljs-keyword">with</span> <span class="hljs-number">1010</span>;<br><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">procedure</span> owners_add(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2)<br><span class="hljs-keyword">is</span><br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_owners <span class="hljs-keyword">values</span>(owner_sequence.nextval,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);<br><span class="hljs-keyword">commit</span>;<br><span class="hljs-keyword">end</span>;<br><span class="hljs-keyword">call</span> owners_add(<span class="hljs-string">&#x27;赵伟&#x27;</span>,<span class="hljs-number">1001</span>,<span class="hljs-string">&#x27;999-3&#x27;</span>,<span class="hljs-string">&#x27;132-7&#x27;</span>,<span class="hljs-number">1002</span>);<br></code></pre></td></tr></table></figure></div>

<p>2、创建带传出参数的存储过程</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">procedure</span> owners_add_with_out(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2,v_id <span class="hljs-keyword">out</span> number)<br><span class="hljs-keyword">is</span><br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">select</span> owner_sequence.nextval <span class="hljs-keyword">into</span> v_id <span class="hljs-keyword">from</span> dual;<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_owners <span class="hljs-keyword">values</span>(v_id,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);<br><span class="hljs-keyword">commit</span>;<br><span class="hljs-keyword">end</span>;<br><br><br><span class="hljs-keyword">declare</span> <br>v_id number;<br><span class="hljs-keyword">begin</span><br>owners_add_with_out(<span class="hljs-string">&#x27;王旺旺&#x27;</span>,<span class="hljs-number">1</span>,<span class="hljs-string">&#x27;922-3&#x27;</span>,<span class="hljs-string">&#x27;133-7&#x27;</span>,<span class="hljs-number">1</span>,v_id);<br>DBMS_OUTPUT.put_line(<span class="hljs-string">&#x27;增加成功,ID:&#x27;</span><span class="hljs-operator">||</span>v_id);<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<h2 id="14、触发器"><a href="#14、触发器" class="headerlink" title="14、触发器"></a>14、触发器</h2><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><p>数据库触发器是一个与表相关联的、存储的 PL&#x2F;SQL 程序。每当一个特定的数据操作语句(Insert,update,delete)在指定的表上发出时，Oracle 自动地执行触发器中定义的语句序列。</p>
<p>触发器可用于</p>
<ul>
<li>数据确认</li>
<li>实施复杂的安全性检查</li>
<li>做审计，跟踪表上所做的数据操作等</li>
<li>数据的备份和同步</li>
</ul>
<p>触发器分类</p>
<ul>
<li>前置触发器（BEFORE）</li>
<li>后置触发器（AFTER）</li>
</ul>
<h4 id="触发器语法"><a href="#触发器语法" class="headerlink" title="触发器语法"></a>触发器语法</h4><div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">trigger</span> 触发器名字<br>before<span class="hljs-operator">|</span>after<br>[<span class="hljs-keyword">delete</span>][[<span class="hljs-keyword">or</span>] <span class="hljs-keyword">insert</span>][[<span class="hljs-keyword">or</span>]<span class="hljs-keyword">update</span> [<span class="hljs-keyword">of</span> 列名]]<br><span class="hljs-keyword">on</span> 表名<br>[<span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> <span class="hljs-type">row</span> ] [<span class="hljs-keyword">when</span> [条件]]<br><span class="hljs-keyword">declare</span><br>变量申明;<br><span class="hljs-keyword">begin</span><br>PLSQL块<br><span class="hljs-keyword">end</span>;<br></code></pre></td></tr></table></figure></div>

<blockquote>
<p>作用是标注此触发器是行级触发器还是语句级触发器</p>
</blockquote>
<p>在触发器中触发语句与伪记录变量的值</p>
<table>
<thead>
<tr>
<th>触发语句</th>
<th>:old</th>
<th>:new</th>
</tr>
</thead>
<tbody><tr>
<td>insert</td>
<td>所有字段都是空的（null）</td>
<td>将要插入的数据</td>
</tr>
<tr>
<td>update</td>
<td>更新以前该行的值</td>
<td>更新后的值</td>
</tr>
<tr>
<td>delete</td>
<td>删除以前该行的值</td>
<td>所有字段都是空的（null）</td>
</tr>
</tbody></table>
<h4 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h4><p>1、前置触发器</p>
<p>需求：当用户输入本月累计表数后，自动计算出本月使用数 。</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">trigger</span> tri_account_update<br>before<br><span class="hljs-keyword">update</span> <span class="hljs-keyword">of</span> num1<br><span class="hljs-keyword">on</span> t_account<br><span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> <span class="hljs-type">row</span><br><span class="hljs-keyword">declare</span><br><span class="hljs-keyword">begin</span><br>:new.usenum:<span class="hljs-operator">=</span>:new.num1<span class="hljs-operator">-</span>:new.num0;<br><span class="hljs-keyword">end</span>;<br><br>#<span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class="hljs-keyword">year</span> <span class="hljs-type">char</span>(<span class="hljs-number">4</span>),<span class="hljs-keyword">month</span> #<span class="hljs-type">char</span>(<span class="hljs-number">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class="hljs-type">date</span>,money number(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>),isfee #<span class="hljs-type">char</span>(<span class="hljs-number">1</span>),feedate <span class="hljs-type">date</span>,feeuserid number);<br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_account <span class="hljs-keyword">values</span>(<span class="hljs-number">1</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">1001</span>,<span class="hljs-number">2023</span>,<span class="hljs-number">06</span>,<span class="hljs-number">43543</span>,<span class="hljs-number">46456</span>,<span class="hljs-number">3000</span>,<span class="hljs-number">1001</span>,sysdate,<span class="hljs-number">3232</span>,<span class="hljs-number">0</span>,sysdate,<span class="hljs-number">1001</span>);<br><span class="hljs-keyword">commit</span>;<br><br><span class="hljs-keyword">update</span> t_account <span class="hljs-keyword">set</span> num1<span class="hljs-operator">=</span><span class="hljs-number">100000</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br></code></pre></td></tr></table></figure></div>

<p>2、后置触发器</p>
<p>需求：当用户修改了业主信息表的数据时记录修改前与修改后的值</p>
<div class="highlight-container" data-rel="Sql"><figure class="iseeu highlight sql"><table><tr><td class="code"><pre><code class="hljs sql"><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> t_owners_log<br>(<br>updatetime <span class="hljs-type">date</span>,<br>ownerid number,<br>oldname varchar2(<span class="hljs-number">30</span>),<br>newname varchar2(<span class="hljs-number">30</span>)<br>);<br><br><span class="hljs-keyword">create</span> <span class="hljs-keyword">or</span> replace <span class="hljs-keyword">trigger</span> tri_insert_owner<br>after<br><span class="hljs-keyword">update</span> <span class="hljs-keyword">of</span> name<br><span class="hljs-keyword">on</span> t_owners<br><span class="hljs-keyword">for</span> <span class="hljs-keyword">each</span> <span class="hljs-type">row</span><br><span class="hljs-keyword">declare</span><br><span class="hljs-keyword">begin</span><br><span class="hljs-keyword">insert</span> <span class="hljs-keyword">into</span> t_owners_log <span class="hljs-keyword">values</span>(sysdate,:old.id,:old.name,:new.name);<br><span class="hljs-keyword">end</span>;<br><br><span class="hljs-keyword">update</span> t_owners <span class="hljs-keyword">set</span> name<span class="hljs-operator">=</span><span class="hljs-string">&#x27;lililili&#x27;</span> <span class="hljs-keyword">where</span> id<span class="hljs-operator">=</span><span class="hljs-number">1004</span>;<br><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> t_owners_log;<br></code></pre></td></tr></table></figure></div>

]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
        <tag>关系型数据库</tag>
        <tag>表</tag>
        <tag>视图</tag>
        <tag>表空间</tag>
        <tag>序列</tag>
        <tag>函数</tag>
        <tag>索引</tag>
        <tag>触发器</tag>
        <tag>存储函数</tag>
        <tag>存储过程</tag>
      </tags>
  </entry>
</search>
